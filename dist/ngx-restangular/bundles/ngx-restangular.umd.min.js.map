{"version":3,"sources":["ng://ngx-restangular/lib/ngx-restangular.config.ts","ng://ngx-restangular/lib/ngx-restangular-helper.ts","ng://ngx-restangular/lib/ngx-restangular-http.ts","ng://ngx-restangular/lib/ngx-restangular-config.factory.ts","ng://ngx-restangular/lib/ngx-restangular.ts","ng://ngx-restangular/lib/ngx-restangular.module.ts"],"names":["RESTANGULAR","InjectionToken","RestangularFactory","config","configObj","fn","arrServices","isArray","RestangularHelper","createRequest","options","requestQueryParams","createRequestQueryParams","params","requestHeaders","createRequestHeaders","headers","methodName","method","toUpperCase","withCredentials","request","HttpRequest","url","data","responseType","indexOf","queryParams","assign","search","HttpParams","key","value","Array","forEach","val","append","JSON","stringify","HttpHeaders","RestangularHttp","http","this","prototype","_this","handle","pipe","filter","event","HttpResponse","map","response","ok","throwError","HttpErrorResponse","catchError","err","error","repeatRequest","newRequest","Injectable","HttpBackend","RestangularConfigurer","object","configuration","safeMethods","isSafe","operation","includes","toLowerCase","absolutePattern","isAbsoluteUrl","string","isUndefined","absoluteUrl","isNull","test","setSelfLinkAbsoluteUrl","baseUrl","setBaseUrl","newBaseUrl","substring","length","extraFields","setExtraFields","newExtraFields","defaultHttpFields","setDefaultHttpFields","values","plainByDefault","setPlainByDefault","withHttpValues","httpLocalConfig","obj","defaults","encodeIds","setEncodeIds","encode","defaultRequestParams","get","post","put","remove","common","setDefaultRequestParams","param1","param2","methods","push","each","requestParams","defaultHeaders","setDefaultHeaders","defaultResponseMethod","setDefaultResponseMethod","methodOverriders","setMethodOverriders","overriders","extend","isOverridenMethod","jsonp","setJsonp","active","find","one","urlCreator","setUrlCreator","name","has","urlCreatorFactory","Error","restangularFields","id","route","parentResource","restangularCollection","cannonicalId","etag","selfLink","getList","head","trace","patch","getRestangularUrl","getRequestedUrl","putElement","addRestangularMethod","getParentList","clone","ids","httpConfig","reqParams","all","several","oneUrl","allUrl","customPUT","customPATCH","customPOST","customDELETE","customGET","customGETLIST","customOperation","doPUT","doPATCH","doPOST","doDELETE","doGET","doGETLIST","fromServer","withConfig","withHttpConfig","singleOne","plain","save","restangularized","setRestangularFields","resFields","isRestangularized","setFieldToElem","field","elem","properties","split","idValue","initial","prop","index","last","getFieldFromElem","setIdToElem","getIdFromElem","isValidId","elemId","setUrlToElem","getUrlFromElem","useCannonicalId","setUseCannonicalId","getCannonicalIdFromElem","responseInterceptors","tslib_1","__spread","defaultResponseInterceptor","responseExtractor","what","subject","interceptors","theData","interceptor","addResponseInterceptor","extractor","errorInterceptors","addErrorInterceptor","setResponseInterceptor","setResponseExtractor","setErrorInterceptor","requestInterceptors","defaultInterceptor","element","path","fullRequestInterceptor","defaultRequest","reduce","returnInterceptor","addRequestInterceptor","setRequestInterceptor","addFullRequestInterceptor","setFullRequestInterceptor","onBeforeElemRestangularized","setOnBeforeElemRestangularized","setRestangularizePromiseInterceptor","restangularizePromiseInterceptor","onElemRestangularized","setOnElemRestangularized","shouldSaveParent","setParentless","isBoolean","suffix","setRequestSuffix","newSuffix","transformers","addElementTransformer","type","secondArg","thirdArg","isCollection","transformer","arguments","typeTransformers","coll","extendCollection","extendModel","transformElem","Restangular","force","transformLocalElements","changedElem","setTransformOnlyServerElements","fullResponse","setFullResponse","full","BaseCreator","setConfig","parentsArray","current","parents","reverse","resource","$http","localHttpConfig","callHeaders","callParams","configurer","base","add","undefined","keys","isEmpty","Path","normalizeUrl","parts","exec","replace","__this","acum","elemUrl","elemSelfLink","join","encodeURIComponent","fetchUrl","fetchRequestedUrl","encodeUriQuery","pctEncodeSpaces","iterator","context","hasOwnProperty","sort","sortedKeys","i","call","forEachSorted","v","isObject","injector","provider","globalConfiguration","$get","createServiceForConfiguration","service","urlHandler","restangularizeBase","parent","bind","addRestangularMethodFunction","copyRestangularizedElement","stripRestangular","parentId","parentUrl","restangularFieldsForParent","union","pick","isNumber","restangularizeElem","restangularizeCollection","collection","splice","restangularizeResponse","valueToFill","res","toPromise","resolvePromise","filledValue","next","complete","array","omit","addCustomOperation","customFunction","requestMethods","delete","requestFunc","callOperation","alias","fetchFunction","copiedElement","cloneDeep","localElem","getFunction","putFunction","postFunction","deleteFunction","headFunction","traceFunction","optionsFunction","patchFunction","putElementFunction","getById","toString","idx","elemToPut","BehaviorSubject","filledArray","subscribe","serverElem","newArray","parseResponse","resData","whatFetched","okCallback","body","fullParams","processedData","status","every","cb","elemFunction","resParams","callObj","filledObject","errorCallback","isOverrideOperation","X-HTTP-Method-Override","defaultParams","defaultElem","bindedFunction","createdFunction","copy","knownCollectionMethods","serv","isFunction","newConfig","restangularizeElement","setDefaultConfig","arrDI","services","_a","apply","Optional","Inject","args","Injector","CONFIG_OBJ","RestangularModule","parentModule","forRoot","config1","config2","ngModule","providers","provide","useValue","useFactory","deps","NgModule","imports","HttpClientModule","decorators","SkipSelf"],"mappings":"wjBAAA,IAIaA,EAAc,IAAIC,EAAAA,eAAuB,yBACtD,SAAAC,EAAmCC,GACjC,IAAIC,GACFC,GAAIF,EAAO,GACXG,gBASF,OANIC,EAAAA,QAAQJ,EAAO,MACjBC,GACEE,YAAaH,EAAO,GACpBE,GAAIF,EAAO,KAGRC,ECbT,IAAAI,EAAA,gCAESA,EAAAC,cAAP,SAAqBC,GACnB,IAAIC,EAAqBH,EAAkBI,yBAAyBF,EAAQG,QACxEC,EAAiBN,EAAkBO,qBAAqBL,EAAQM,SAChEC,EAAaP,EAAQQ,OAAOC,cAC5BC,EAAkBV,EAAQU,kBAAmB,EAE7CC,EAAU,IAAIC,EAAAA,YAChBL,EACAP,EAAQa,IACRb,EAAQc,MAENR,QAASF,EACTD,OAAQF,EACRc,aAAcf,EAAQe,aACtBL,gBAAeA,IAgBnB,OAZwE,IAApE,MAAO,SAAU,OAAQ,QAAS,WAAWM,QAAQT,KACvDI,EAAU,IAAIC,EAAAA,YACZL,EACAP,EAAQa,KAENP,QAASF,EACTD,OAAQF,EACRc,aAAcf,EAAQe,aACtBL,gBAAeA,KAIdC,GAGFb,EAAAI,yBAAP,SAAgCe,GAC9B,IAAIhB,EAAqBiB,EAAAA,UAAWD,GAChCE,EAAqB,IAAIC,EAAAA,sBAEpBC,GACP,IAAIC,EAAarB,EAAmBoB,GAEhCE,MAAM1B,QAAQyB,GAChBA,EAAME,QAAQ,SAASC,GACrBN,EAASA,EAAOO,OAAOL,EAAKI,MAGT,iBAAVH,IACTA,EAAQK,KAAKC,UAAUN,IAEzBH,EAASA,EAAOO,OAAOL,EAAKC,KAXhC,IAAK,IAAID,KAAOpB,IAAPoB,GAgBT,OAAOF,GAGFrB,EAAAO,qBAAP,SAA4BC,GAC1B,IAAK,IAAIe,KAAOf,EAAS,MAEF,IADJA,EAAQe,WAEhBf,EAAQe,GAInB,OAAO,IAAIQ,EAAAA,YAAYX,EAAAA,UAAWZ,OAlEtC,GCJAwB,EAAA,WAYE,SAAAA,EAAmBC,GAAAC,KAAAD,KAAAA,SAGnBD,EAAAG,UAAAlC,cAAA,SAAcC,GACZ,IAAMW,EAAUb,EAAkBC,cAAcC,GAEhD,OAAOgC,KAAKrB,QAAQA,IAGtBmB,EAAAG,UAAAtB,QAAA,SAAQA,GAAR,IAAAuB,EAAAF,KACE,OAAOA,KAAKD,KAAKI,OAAOxB,GACvByB,KACCC,EAAAA,OAAO,SAAAC,GAAS,OAAAA,aAAiBC,EAAAA,eACjCC,EAAAA,IAAI,SAACC,GACH,OAAKA,EAASC,GAGPD,EAFEE,EAAAA,WAAW,IAAIC,EAAAA,kBAAkBH,MAI5CD,EAAAA,IAAI,SAAAC,GAEF,OADAA,EAAShD,QAAUU,OAAQQ,GACpB8B,IAETI,EAAAA,WAAW,SAAAC,GAOT,OANAA,EAAInC,QAAUA,EACdmC,EAAIhC,KAAOgC,EAAIC,MACfD,EAAIE,cAAgB,SAACC,GACnB,OAAOf,EAAKvB,QAAQsC,GAActC,IAG7BgC,EAAAA,WAAWG,2BAjCzBI,EAAAA,sDARQC,EAAAA,iBADT,GCqBA,SAAAC,EAAsCC,EAAQ5D,GAC5C4D,EAAOC,cAAgB7D,EAKvB,IAAI8D,GAAe,MAAO,OAAQ,UAAW,QAAS,WACtD9D,EAAO+D,OAAS,SAAUC,GACxB,OAAOC,EAAAA,SAASH,EAAaE,EAAUE,gBAGzC,IAAIC,EAAkB,gBACtBnE,EAAOoE,cAAgB,SAAUC,GAC/B,OAAOC,EAAAA,YAAYtE,EAAOuE,cAAgBC,EAAAA,OAAOxE,EAAOuE,aACxDF,GAAUF,EAAgBM,KAAKJ,GAC7BrE,EAAOuE,aAGXvE,EAAOuE,cAAcD,EAAAA,YAAYtE,EAAOuE,cAAsBvE,EAAOuE,YACrEX,EAAOc,uBAAyB,SAAU7C,GACxC7B,EAAOuE,YAAc1C,GAKvB7B,EAAO2E,QAAUL,EAAAA,YAAYtE,EAAO2E,SAAW,GAAK3E,EAAO2E,QAC3Df,EAAOgB,WAAa,SAAUC,GAI5B,OAHA7E,EAAO2E,QAAU,MAAMF,KAAKI,GAC1BA,EAAWC,UAAU,EAAGD,EAAWE,OAAS,GAC5CF,EACKtC,MAMTvC,EAAOgF,YAAchF,EAAOgF,gBAC5BpB,EAAOqB,eAAiB,SAAUC,GAEhC,OADAlF,EAAOgF,YAAcE,EACd3C,MAMTvC,EAAOmF,kBAAoBnF,EAAOmF,sBAClCvB,EAAOwB,qBAAuB,SAAUC,GAEtC,OADArF,EAAOmF,kBAAoBE,EACpB9C,MAMTvC,EAAOsF,eAAiBtF,EAAOsF,iBAAkB,EACjD1B,EAAO2B,kBAAoB,SAAU1D,GAEnC,OADA7B,EAAOsF,gBAA2B,IAAVzD,EACjBU,MAGTvC,EAAOwF,eAAiB,SAAUC,EAAiBC,GACjD,OAAOC,EAAAA,SAASD,EAAKD,EAAiBzF,EAAOmF,oBAG/CnF,EAAO4F,YAAYtB,EAAAA,YAAYtE,EAAO4F,YAAoB5F,EAAO4F,UACjEhC,EAAOiC,aAAe,SAAUC,GAC9B9F,EAAO4F,UAAYE,GAGrB9F,EAAO+F,qBAAuB/F,EAAO+F,uBACjCC,OACAC,QACAC,OACAC,UACAC,WAGJxC,EAAOyC,wBAA0B,SAAUC,EAAQC,GACjD,IAAIC,KACF9F,EAAS6F,GAAUD,EAcrB,OAbKhC,EAAAA,YAAYiC,GAOfC,EAAQC,KAAK,UANTrG,EAAAA,QAAQkG,GACVE,EAAUF,EAEVE,EAAQC,KAAKH,GAMjBI,EAAAA,KAAKF,EAAS,SAAUzF,GACtBf,EAAO+F,qBAAqBhF,GAAUL,IAEjC6B,MAGTqB,EAAO+C,cAAgB3G,EAAO+F,qBAE9B/F,EAAO4G,eAAiB5G,EAAO4G,mBAC/BhD,EAAOiD,kBAAoB,SAAUhG,GAGnC,OAFAb,EAAO4G,eAAiB/F,EACxB+C,EAAOgD,eAAiB5G,EAAO4G,eACxBrE,MAGTqB,EAAOgD,eAAiB5G,EAAO4G,eAM/B5G,EAAO8G,sBAAwB9G,EAAO8G,uBAAyB,UAC/DlD,EAAOmD,yBAA2B,SAAUhG,GAG1C,OAFAf,EAAO8G,sBAAwB/F,EAC/B6C,EAAOkD,sBAAwB9G,EAAO8G,sBAC/BvE,MAETqB,EAAOkD,sBAAwB9G,EAAO8G,sBAKtC9G,EAAOgH,iBAAmBhH,EAAOgH,qBACjCpD,EAAOqD,oBAAsB,SAAU5B,GACrC,IAAI6B,EAAaC,EAAAA,UAAW9B,GAK5B,OAJIrF,EAAOoH,kBAAkB,SAAUF,IACrCA,EAAWT,KAAK,UAElBzG,EAAOgH,iBAAmBE,EACnB3E,MAGTvC,EAAOqH,OAAQ/C,EAAAA,YAAYtE,EAAOqH,QAAiBrH,EAAOqH,MAC1DzD,EAAO0D,SAAW,SAAUC,GAC1BvH,EAAOqH,MAAQE,GAGjBvH,EAAOoH,kBAAoB,SAAUrG,EAAQsE,GAC3C,IAAI3D,EAAS2D,GAAUrF,EAAOgH,iBAC9B,OAAQ1C,EAAAA,YAAYkD,EAAAA,KAAK9F,EAAQ,SAAU+F,GACzC,OAAOA,EAAIvD,gBAAkBnD,EAAOmD,kBAOxClE,EAAO0H,WAAa1H,EAAO0H,YAAc,OACzC9D,EAAO+D,cAAgB,SAAUC,GAC/B,IAAKC,EAAAA,IAAI7H,EAAO8H,kBAAmBF,GACjC,MAAM,IAAIG,MAAM,iCAIlB,OADA/H,EAAO0H,WAAaE,EACbrF,MAaTvC,EAAOgI,kBAAoBhI,EAAOgI,oBAC9BC,GAAI,KACJC,MAAO,QACPC,eAAgB,iBAChBC,sBAAuB,wBACvBC,aAAc,iBACdC,KAAM,kBACNC,SAAU,OACVvC,IAAK,MACLwC,QAAS,UACTtC,IAAK,MACLD,KAAM,OACNE,OAAQ,SACRsC,KAAM,OACNC,MAAO,QACPnI,QAAS,UACToI,MAAO,QACPC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,WAAY,aACZC,qBAAsB,uBACtBC,cAAe,gBACfC,MAAO,QACPC,IAAK,MACLC,WAAY,eACZC,UAAW,YACX3B,IAAK,MACL4B,IAAK,MACLC,QAAS,UACTC,OAAQ,SACRC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,UAAW,YACXC,cAAe,gBACfC,gBAAiB,kBACjBC,MAAO,QACPC,QAAS,UACTC,OAAQ,SACRC,SAAU,WACVC,MAAO,QACPC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,eAAgB,iBAChBC,UAAW,YACXC,MAAO,QACPC,KAAM,OACNC,gBAAiB,mBAErBhH,EAAOiH,qBAAuB,SAAUC,GAGtC,OAFA9K,EAAOgI,kBACLb,EAAAA,UAAWnH,EAAOgI,kBAAmB8C,GAChCvI,MAGTvC,EAAO+K,kBAAoB,SAAUrF,GACnC,QAASA,EAAI1F,EAAOgI,kBAAkB4C,kBAGxC5K,EAAOgL,eAAiB,SAAUC,EAAOC,EAAMrJ,GAC7C,IAAIsJ,EAAaF,EAAMG,MAAM,KACzBC,EAAUH,EACdxE,EAAAA,KAAK4E,EAAAA,QAAQH,GAAa,SAAUI,GAClCF,EAAQE,MACRF,EAAUA,EAAQE,KAEpB,IAAIC,EAAaC,EAAAA,KAAKN,GAEtB,OADAE,EAAQG,GAAS3J,EACVU,MAGTvC,EAAO0L,iBAAmB,SAAUT,EAAOC,GACzC,IAAIC,EAAaF,EAAMG,MAAM,KACzBC,EAAeH,EAMnB,OALAxE,EAAAA,KAAKyE,EAAY,SAAUI,GACrBF,IACFA,EAAUA,EAAQE,MAGftC,EAAAA,MAAMoC,IAGfrL,EAAO2L,YAAc,SAAUT,EAAMjD,GAEnC,OADAjI,EAAOgL,eAAehL,EAAOgI,kBAAkBC,GAAIiD,EAAMjD,GAClD1F,MAGTvC,EAAO4L,cAAgB,SAAUV,GAC/B,OAAOlL,EAAO0L,iBAAiB1L,EAAOgI,kBAAkBC,GAAIiD,IAG9DlL,EAAO6L,UAAY,SAAUC,GAC3B,MAAO,KAAOA,IAAWxH,EAAAA,YAAYwH,KAAYtH,EAAAA,OAAOsH,IAG1D9L,EAAO+L,aAAe,SAAUb,EAAM9J,GAEpC,OADApB,EAAOgL,eAAehL,EAAOgI,kBAAkBO,SAAU2C,EAAM9J,GACxDmB,MAGTvC,EAAOgM,eAAiB,SAAUd,GAChC,OAAOlL,EAAO0L,iBAAiB1L,EAAOgI,kBAAkBO,SAAU2C,IAGpElL,EAAOiM,iBAAkB3H,EAAAA,YAAYtE,EAAOiM,kBAA2BjM,EAAOiM,gBAC9ErI,EAAOsI,mBAAqB,SAAUrK,GAEpC,OADA7B,EAAOiM,gBAAkBpK,EAClBU,MAGTvC,EAAOmM,wBAA0B,SAAUjB,GACzC,IAAI7C,EAAe6C,EAAKlL,EAAOgI,kBAAkBK,cAEjD,OADerI,EAAO6L,UAAUxD,GAAgBA,EAAerI,EAAO4L,cAAcV,IAYtFlL,EAAOoM,qBAAuBpM,EAAOoM,qBAAoBC,EAAAC,SAAOtM,EAAOoM,yBAEvEpM,EAAOuM,2BAA6B,SAAUlL,GAC5C,OAAOA,OAGTrB,EAAOwM,kBAAoB,SAAUnL,EAAM2C,EAAWyI,EAAMrL,EAAK4B,EAAU0J,GACzE,IAAIC,EAAe1D,EAAAA,MAAMjJ,EAAOoM,sBAChCO,EAAalG,KAAKzG,EAAOuM,4BACzB,IAAIK,EAAUvL,EAKd,OAJAqF,EAAAA,KAAKiG,EAAc,SAAUE,GAC3BD,EAAUC,EAAYD,EAAS5I,EAC7ByI,EAAMrL,EAAK4B,EAAU0J,KAElBE,GAGThJ,EAAOkJ,uBAAyB,SAAUC,GAExC,OADA/M,EAAOoM,qBAAqB3F,KAAKsG,GAC1BxK,MAGTvC,EAAOgN,kBAAoBhN,EAAOgN,kBAAiBX,EAAAC,SAAOtM,EAAOgN,sBACjEpJ,EAAOqJ,oBAAsB,SAAUJ,GAErC,OADA7M,EAAOgN,kBAAiBX,EAAAC,UAAIO,GAAgB7M,EAAOgN,mBAC5CzK,MAGTqB,EAAOsJ,uBAAyBtJ,EAAOkJ,uBACvClJ,EAAOuJ,qBAAuBvJ,EAAOkJ,uBACrClJ,EAAOwJ,oBAAsBxJ,EAAOqJ,oBAUpCjN,EAAOqN,oBAAsBrN,EAAOqN,oBAAmBhB,EAAAC,SAAOtM,EAAOqN,wBAErErN,EAAOsN,mBAAqB,SAAUC,EAASvJ,EAAWwJ,EAAMpM,EAAKP,EAASH,EAAQyI,GACpF,OACEoE,QAASA,EACT1M,QAASA,EACTH,OAAQA,EACRyI,WAAYA,IAIhBnJ,EAAOyN,uBAAyB,SAAUF,EAASvJ,EAAWwJ,EAAMpM,EAAKP,EAASH,EAAQyI,GACxF,IAAIwD,EAAe1D,EAAAA,MAAMjJ,EAAOqN,qBAC5BK,EAAiB1N,EAAOsN,mBAAmBC,EAASvJ,EAAWwJ,EAAMpM,EAAKP,EAASH,EAAQyI,GAC/F,OAAOwE,EAAAA,OAAOhB,EAAc,SAAUzL,EAAc2L,GAElD,IAAIe,EAAyBf,EAAY3L,EAAQqM,QAASvJ,EAAWwJ,EAAMpM,EAAKF,EAAQL,QAASK,EAAQR,OAAQQ,EAAQiI,YACzH,OAAOhC,EAAAA,OAAOjG,EAAS0M,IACtBF,IAGL9J,EAAOiK,sBAAwB,SAAUhB,GASvC,OARA7M,EAAOqN,oBAAoB5G,KAAK,SAAUyE,EAAMlH,EAAWwJ,EAAMpM,EAAKP,EAASH,EAAQyI,GACrF,OACEtI,QAASA,EACTH,OAAQA,EACR6M,QAASV,EAAY3B,EAAMlH,EAAWwJ,EAAMpM,GAC5C+H,WAAYA,KAGT5G,MAGTqB,EAAOkK,sBAAwBlK,EAAOiK,sBAEtCjK,EAAOmK,0BAA4B,SAAUlB,GAE3C,OADA7M,EAAOqN,oBAAoB5G,KAAKoG,GACzBtK,MAGTqB,EAAOoK,0BAA4BpK,EAAOmK,0BAE1C/N,EAAOiO,4BAA8BjO,EAAOiO,6BAA+B,SAAU/C,GACjF,OAAOA,GAEXtH,EAAOsK,+BAAiC,SAAUjI,GAEhD,OADAjG,EAAOiO,4BAA8BhI,EAC9B1D,MAGTqB,EAAOuK,oCAAsC,SAAUtB,GAErD,OADA7M,EAAOoO,iCAAmCvB,EACnCtK,MAUTvC,EAAOqO,sBAAwBrO,EAAOqO,uBAAyB,SAAUnD,GACrE,OAAOA,GAEXtH,EAAO0K,yBAA2B,SAAUrI,GAE1C,OADAjG,EAAOqO,sBAAwBpI,EACxB1D,MAGTvC,EAAOuO,iBAAmBvO,EAAOuO,kBAAoB,WACjD,OAAO,GAEX3K,EAAO4K,cAAgB,SAAUnJ,GAU/B,OATIjF,EAAAA,QAAQiF,GACVrF,EAAOuO,iBAAmB,SAAUrG,GAClC,OAAQjE,EAAAA,SAASoB,EAAQ6C,IAElBuG,EAAAA,UAAUpJ,KACnBrF,EAAOuO,iBAAmB,WACxB,OAAQlJ,IAGL9C,MAYTvC,EAAO0O,OAASpK,EAAAA,YAAYtE,EAAO0O,QAAU,KAAO1O,EAAO0O,OAC3D9K,EAAO+K,iBAAmB,SAAUC,GAElC,OADA5O,EAAO0O,OAASE,EACTrM,MAMTvC,EAAO6O,aAAe7O,EAAO6O,iBAC7BjL,EAAOkL,sBAAwB,SAAUC,EAAMC,EAAWC,GACxD,IAAIC,EAAe,KACfC,EAAc,KACO,IAArBC,UAAUrK,OACZoK,EAAcH,GAEdG,EAAcF,EACdC,EAAeF,GAGjB,IAAIK,EAAmBrP,EAAO6O,aAAaE,GAY3C,OAXKM,IACHA,EAAmBrP,EAAO6O,aAAaE,OAGzCM,EAAiB5I,KAAK,SAAU6I,EAAMpE,GACpC,OAAI1G,EAAAA,OAAO0K,IAAkBI,IAASJ,EAC7BC,EAAYjE,GAEdA,IAGFtH,GAGTA,EAAO2L,iBAAmB,SAAUrH,EAAOhI,GACzC,OAAO0D,EAAOkL,sBAAsB5G,GAAO,EAAMhI,IAGnD0D,EAAO4L,YAAc,SAAUtH,EAAOhI,GACpC,OAAO0D,EAAOkL,sBAAsB5G,GAAO,EAAOhI,IAGpDF,EAAOyP,cAAgB,SAAUvE,EAAMgE,EAAchH,EAAOwH,EAAaC,GACvE,IAAKA,IAAU3P,EAAO4P,yBAA2B1E,EAAKlL,EAAOgI,kBAAkBsC,YAC7E,OAAOY,EAET,IAAImE,EAAmBrP,EAAO6O,aAAa3G,GACvC2H,EAAc3E,EAMlB,OALImE,GACF3I,EAAAA,KAAK2I,EAAkB,SAAUF,GAC/BU,EAAcV,EAAYD,EAAcW,KAGrC7P,EAAOqO,sBAAsBwB,EAAaX,EAAchH,EAAOwH,IAGxE1P,EAAO4P,wBAAyBtL,EAAAA,YAAYtE,EAAO4P,yBAEjD5P,EAAO4P,uBAEThM,EAAOkM,+BAAiC,SAAUvI,GAChDvH,EAAO4P,wBAA0BrI,GAGnCvH,EAAO+P,cAAezL,EAAAA,YAAYtE,EAAO+P,eAAwB/P,EAAO+P,aACxEnM,EAAOoM,gBAAkB,SAAUC,GAEjC,OADAjQ,EAAO+P,aAAeE,EACf1N,MAKTvC,EAAO8H,qBAMP,IAAIoI,EAAc,aAGlBA,EAAY1N,UAAU2N,UAAY,SAAUnQ,GAE1C,OADAuC,KAAKvC,OAASA,EACPuC,MAGT2N,EAAY1N,UAAU4N,aAAe,SAAUC,GAE7C,IADA,IAAIC,KACGD,GACLC,EAAQ7J,KAAK4J,GACbA,EAAUA,EAAQ9N,KAAKvC,OAAOgI,kBAAkBG,gBAElD,OAAOmI,EAAQC,WAwCjBL,EAAY1N,UAAUgO,SAAW,SAAUH,EAASI,EAAOC,EAAiBC,EAAaC,EAAYnE,EAAMnE,EAAMtE,GAC/G,IAAItD,EAASiF,EAAAA,SAASiL,MAAkBrO,KAAKvC,OAAO+F,qBAAqBK,QACrEvF,EAAU8E,EAAAA,SAASgL,MAAmBpO,KAAKvC,OAAO4G,gBAElD0B,IACGtI,EAAO+D,OAAOC,GAGjBnD,EAAQ,iBAAmByH,EAF3BzH,EAAQ,YAAcyH,GAM1B,IAjD2BtI,EAAQyQ,EAAOrP,EAAKyP,EAC3CL,EAgDApP,EAAMmB,KAAKuO,KAAKT,GAEpB,GAAI5D,EAAM,CACR,IAAIsE,EAAM,GACL,MAAMtM,KAAKrD,KACd2P,GAAO,KAGT3P,GADA2P,GAAOtE,EAWT,OAPIlK,KAAKvC,OAAO0O,SAC+D,IAA7EtN,EAAIG,QAAQgB,KAAKvC,OAAO0O,OAAQtN,EAAI2D,OAASxC,KAAKvC,OAAO0O,OAAO3J,UAAmBxC,KAAKvC,OAAOgM,eAAeqE,KAC9GjP,GAAOmB,KAAKvC,OAAO0O,QAGrB2B,EAAQ9N,KAAKvC,OAAOgI,kBAAkBmB,YAAc6H,UAjEzBhR,EAmEAuC,KAAKvC,OAnEGyQ,EAmEKA,EAnEErP,EAmEKA,EAnEAyP,GAoE7CrI,QAASjG,KAAKvC,OAAOwF,eAAekL,GAEhC3P,OAAQ,MACRL,OAAQA,EACRG,QAASA,IAGbmF,IAAKzD,KAAKvC,OAAOwF,eAAekL,GAE5B3P,OAAQ,MACRL,OAAQA,EACRG,QAASA,IAGbwG,MAAO9E,KAAKvC,OAAOwF,eAAekL,GAE9B3P,OAAQ,QACRL,OAAQA,EACRG,QAASA,IAGbqF,IAAK3D,KAAKvC,OAAOwF,eAAekL,GAE5B3P,OAAQ,MACRL,OAAQA,EACRG,QAASA,IAGboF,KAAM1D,KAAKvC,OAAOwF,eAAekL,GAE7B3P,OAAQ,OACRL,OAAQA,EACRG,QAASA,IAGbsF,OAAQ5D,KAAKvC,OAAOwF,eAAekL,GAE/B3P,OAAQ,SACRL,OAAQA,EACRG,QAASA,IAGb4H,KAAMlG,KAAKvC,OAAOwF,eAAekL,GAE7B3P,OAAQ,OACRL,OAAQA,EACRG,QAASA,IAGb6H,MAAOnG,KAAKvC,OAAOwF,eAAekL,GAE9B3P,OAAQ,QACRL,OAAQA,EACRG,QAASA,IAGbN,QAASgC,KAAKvC,OAAOwF,eAAekL,GAEhC3P,OAAQ,UACRL,OAAQA,EACRG,QAASA,IAGb8H,MAAOpG,KAAKvC,OAAOwF,eAAekL,GAE9B3P,OAAQ,QACRL,OAAQA,EACRG,QAASA,KAtIX2P,KACJ9J,EAAAA,KAAKuK,EAAAA,KAAKJ,GAAa,SAAUjP,GAC/B,IAAIC,EAAQgP,EAAWjP,GAGvBC,EAAMnB,OAASyG,EAAAA,UAAWtF,EAAMnB,OAAQV,EAAO+F,qBAAqBlE,EAAMd,OAAOmD,gBAE7EgN,EAAAA,QAAQrP,EAAMnB,gBACTmB,EAAMnB,OAGXV,EAAO+D,OAAOlC,EAAMd,QAEtByP,EAAS5O,GAAO,WACd,IAAI5B,EAASmH,EAAAA,OAAOtF,GAClBT,IAAKA,IAEP,OAAOqP,EAAMnQ,cAAcN,IAK7BwQ,EAAS5O,GAAO,SAAUP,GACxB,IAAIrB,EAASmH,EAAAA,OAAOtF,GAClBT,IAAKA,EACLC,KAAMA,IAER,OAAOoP,EAAMnQ,cAAcN,MAM1BwQ,GA+GT,IAAIW,EAAO,cAGXA,EAAK3O,UAAY,IAAI0N,GAENkB,aAAe,SAAUhQ,GACtC,IAAIiQ,EAAQ,6BAA6BC,KAAKlQ,GAE9C,OADAiQ,EAAM,GAAKA,EAAM,GAAGE,QAAQ,WAAY,KACZ,oBAAbF,EAAM,GAAsBA,EAAM,GAAKA,EAAM,GAAKA,EAAM,IAGzEF,EAAK3O,UAAUsO,KAAO,SAAUT,GAC9B,IAAImB,EAASjP,KACb,OAAOoL,EAAAA,OAAOpL,KAAK6N,aAAaC,GAAU,SAAUoB,EAAWvG,GAC7D,IAAIwG,EACAC,EAAeH,EAAOxR,OAAOgM,eAAed,GAChD,GAAIyG,EAAc,CAChB,GAAIH,EAAOxR,OAAOoE,cAAcuN,GAC9B,OAAOA,EAEPD,EAAUC,OAKZ,GAFAD,EAAUxG,EAAKsG,EAAOxR,OAAOgI,kBAAkBE,OAE3CgD,EAAKsG,EAAOxR,OAAOgI,kBAAkBI,uBAAwB,CAC/D,IAAIc,EAAMgC,EAAKsG,EAAOxR,OAAOgI,kBAAkBkB,KAC3CA,IACFwI,GAAW,IAAMxI,EAAI0I,KAAK,UAEvB,CACL,IAAI9F,EAEFA,EADE0F,EAAOxR,OAAOiM,gBACPuF,EAAOxR,OAAOmM,wBAAwBjB,GAEtCsG,EAAOxR,OAAO4L,cAAcV,GAGnClL,EAAO6L,UAAUC,KAAYZ,EAAKT,YACpCiH,GAAW,KAAOF,EAAOxR,OAAO4F,UAAYiM,mBAAmB/F,GAAUA,IAK/E,OADA2F,EAAOA,EAAKF,QAAQ,MAAO,IAAM,IAAMG,EAChCF,EAAOJ,aAAaK,IAE1BlP,KAAKvC,OAAO2E,UAIjBwM,EAAK3O,UAAUsP,SAAW,SAAUzB,EAAS5D,GAC3C,IAAI9H,EAAUpC,KAAKuO,KAAKT,GAIxB,OAHI5D,IACF9H,GAAW,IAAM8H,GAEZ9H,GAGTwM,EAAK3O,UAAUuP,kBAAoB,SAAU1B,EAAS5D,GACpD,IAAIrL,EAAMmB,KAAKuP,SAASzB,EAAS5D,GAC7B/L,EAAS2P,EAAQrQ,EAAOgI,kBAAkBoB,WA0B9C,SAAA4I,EAAwBhQ,EAAKiQ,GAC3B,OAAOJ,mBAAmB7P,GAAKuP,QAAQ,QAAS,KAAKA,QAAQ,QAAS,KAAKA,QAAQ,OAAQ,KAAKA,QAAQ,QAAS,KAAKA,QAAQ,OAASU,EAAkB,MAAQ,KAGnK,IAAKvR,EACH,OAAOU,GAAOmB,KAAKvC,OAAO0O,QAAU,IAGtC,IAAI2C,KAiBJ,OAjCA,SAAuB3L,EAAKwM,EAAWC,GAErC,IADA,IAAIlB,EAXN,SAAoBvL,GAClB,IAAIuL,KACJ,IAAK,IAAIrP,KAAO8D,EACVA,EAAI0M,eAAexQ,IACrBqP,EAAKxK,KAAK7E,GAGd,OAAOqP,EAAKoB,OAIDC,CAAW5M,GACb6M,EAAI,EAAGA,EAAItB,EAAKlM,OAAQwN,IAC/BL,EAASM,KAAKL,EAASzM,EAAIuL,EAAKsB,IAAKtB,EAAKsB,IAc9CE,CAAc/R,EAAQ,SAAUmB,EAAOD,GACvB,OAAVC,GAAkBA,IAAUmP,YAG3B5Q,EAAAA,QAAQyB,KACXA,GAASA,IAGXE,EAAAA,QAAQF,EAAO,SAAU6Q,GACnBC,EAAAA,SAASD,KACXA,EAAIxQ,KAAKC,UAAUuQ,IAErBrB,EAAM5K,KAAKuL,EAAepQ,GAAO,IAAMoQ,EAAeU,SAInDtR,GAAOmB,KAAKvC,OAAO0O,QAAU,MAA8B,IAAtBtN,EAAIG,QAAQ,KAAe,IAAM,KAAO8P,EAAMO,KAAK,MAGjG5R,EAAO8H,kBAAkB0F,KAAO2D,mBChqBhC,SAAAzB,EAC0CzP,EAChC2S,EACAtQ,GAFgCC,KAAAtC,UAAAA,EAChCsC,KAAAqQ,SAAAA,EACArQ,KAAAD,KAAAA,EAERC,KAAKsQ,SAAW,IAoBpB,SAAwBpC,GACtB,IAAIqC,KAEJnP,EAAsBpB,KAAMuQ,GAE5BvQ,KAAKwQ,KAEL,WAEE,SAAAC,EAAuChT,GACrC,IAAIiT,KAEAC,EAAa,IAAIlT,EAAO8H,kBAAkB9H,EAAO0H,YAGrD,SAAAyL,EAA4BC,EAAQlI,EAAMhD,EAAOkB,EAAWkB,GAsB1D,GArBAY,EAAKlL,EAAOgI,kBAAkBE,OAASA,EACvCgD,EAAKlL,EAAOgI,kBAAkBY,mBAAqByK,EAAAA,KAAKH,EAAWpB,SAAUoB,EAAYhI,GACzFA,EAAKlL,EAAOgI,kBAAkBa,iBAAmBwK,EAAAA,KAAKH,EAAWnB,kBAAmBmB,EAAYhI,GAChGA,EAAKlL,EAAOgI,kBAAkBe,sBAAwBsK,EAAAA,KAAKC,EAA8BpI,GACzFA,EAAKlL,EAAOgI,kBAAkBiB,OAASoK,EAAAA,KAAKE,EAA4BrI,GACxEA,EAAKlL,EAAOgI,kBAAkBoB,WAAa8H,EAAAA,QAAQ9H,GAAa,KAAOA,EACvE8B,EAAKlL,EAAOgI,kBAAkBwC,gBAAkB6I,EAAAA,KAAK7I,EAAgBU,GACrEA,EAAKlL,EAAOgI,kBAAkB0C,OAAS2I,EAAAA,KAAKG,EAAkBtI,EAAMA,GAGpEA,EAAKlL,EAAOgI,kBAAkB4C,kBAAmB,EAGjDM,EAAKlL,EAAOgI,kBAAkBP,KAAO4L,EAAAA,KAAK5L,EAAKyD,EAAMA,GACrDA,EAAKlL,EAAOgI,kBAAkBqB,KAAOgK,EAAAA,KAAKhK,EAAK6B,EAAMA,GACrDA,EAAKlL,EAAOgI,kBAAkBsB,SAAW+J,EAAAA,KAAK/J,EAAS4B,EAAMA,GAC7DA,EAAKlL,EAAOgI,kBAAkBuB,QAAU8J,EAAAA,KAAK9J,EAAQ2B,EAAMA,GAC3DA,EAAKlL,EAAOgI,kBAAkBwB,QAAU6J,EAAAA,KAAK7J,EAAQ0B,EAAMA,GAE3DA,EAAKlL,EAAOgI,kBAAkBsC,cAAgBA,EAE1C8I,GAAUpT,EAAOuO,iBAAiBrG,GAAQ,CAC5C,IAAIuL,EAAWzT,EAAO4L,cAAcwH,GAChCM,EAAY1T,EAAOgM,eAAeoH,GAElCO,EAA6BC,EAAAA,MAC/BvO,EAAAA,OAAOwO,EAAAA,KAAK7T,EAAOgI,mBAAoB,QAAS,YAAa,oBAC7DhI,EAAOgF,aAELmD,EAAiB0L,EAAAA,KAAKT,EAAQO,GAE9B3T,EAAO6L,UAAU4H,IACnBzT,EAAO2L,YAAYxD,EAAgBsL,EAAUvL,GAE3ClI,EAAO6L,UAAU6H,IACnB1T,EAAO+L,aAAa5D,EAAgBuL,EAAWxL,GAGjDgD,EAAKlL,EAAOgI,kBAAkBG,gBAAkBA,OAEhD+C,EAAKlL,EAAOgI,kBAAkBG,gBAAkB,KAElD,OAAO+C,EAGT,SAAAzD,EAAa2L,EAAQlL,EAAOD,EAAIwC,GAC9B,IAAInH,EACJ,GAAIwQ,EAAAA,SAAS5L,IAAU4L,EAAAA,SAASV,GAG9B,MAFA9P,EAAQ,wDACRA,GAAS,4EACH,IAAIyE,MAAMzE,GAElB,GAAIgB,EAAAA,YAAY4D,GAGd,MAFA5E,EAAQ,iEACRA,GAAS,+EACH,IAAIyE,MAAMzE,GAElB,IAAI4H,KAGJ,OAFAlL,EAAO2L,YAAYT,EAAMjD,EAAIC,GAC7BlI,EAAOgL,eAAehL,EAAOgI,kBAAkByC,UAAWS,EAAMT,GACzDsJ,EAAmBX,EAAQlI,EAAMhD,GAAO,GAGjD,SAAAmB,EAAa+J,EAAQlL,GACnB,OAAO8L,EAAyBZ,KAAYlL,GAAO,GAGrD,SAAAoB,EAAiB8J,EAAQlL,GACvB,IAAI+L,KAEJ,OADAA,EAAWjU,EAAOgI,kBAAkBkB,KAAOpH,MAAMU,UAAU0R,OAAO1B,KAAKpD,UAAW,GAC3E4E,EAAyBZ,EAAQa,EAAY/L,GAAO,GAG7D,SAAAqB,EAAgB6J,EAAQlL,EAAO9G,GAC7B,IAAK8G,EACH,MAAM,IAAIH,MAAM,6DAElB,IAAImD,KAEJ,OADAlL,EAAO+L,aAAab,EAAM9J,EAAK8G,GACxB6L,EAAmBX,EAAQlI,EAAMhD,GAAO,GAGjD,SAAAsB,EAAgB4J,EAAQlL,EAAO9G,GAC7B,IAAK8G,EACH,MAAM,IAAIH,MAAM,6DAElB,IAAImD,KAEJ,OADAlL,EAAO+L,aAAab,EAAM9J,EAAK8G,GACxB8L,EAAyBZ,EAAQlI,EAAMhD,GAAO,GAIvD,SAAAiM,EAAgCzH,EAASwC,EAAckF,GACrD,OAAO1H,EAAQ/J,KAAKC,EAAAA,OAAO,SAAAyR,GAAO,QAAEA,KAAMC,YAG5C,SAAAC,EAAwB7H,EAAS1J,EAAU3B,EAAMmT,GAC/CrN,EAAAA,OAAOqN,EAAanT,GAGhBrB,EAAO+P,aACTrD,EAAQ+H,KAAKtN,EAAAA,OAAOnE,GAClB3B,KAAMA,KAGRqL,EAAQ+H,KAAKpT,GAGfqL,EAAQgI,WAIV,SAAAlB,EAA0BtI,GACxB,GAAI9K,EAAAA,QAAQ8K,GAAO,CACjB,IAAIyJ,KAIJ,OAHAjO,EAAAA,KAAKwE,EAAM,SAAUrJ,GACnB8S,EAAMlO,KAAKzG,EAAO+K,kBAAkBlJ,GAAS2R,EAAiB3R,GAASA,KAElE8S,EAEP,OAAOC,EAAAA,KAAK1J,EAAM7F,EAAAA,OAAOuP,EAAAA,KAAK5U,EAAOgI,kBAAmB,QAI5D,SAAA6M,EAA4B3J,GAC1BA,EAAKlL,EAAOgI,kBAAkB+B,iBAAmBsJ,EAAAA,KAAKyB,EAAgB5J,GACtE,IAAI6J,GAAkB/O,IAAK8O,EAAgBE,SAAQF,GACnDpO,EAAAA,MAAM,MAAO,QAAS,QAAS,SAAUkB,GACvCmN,EAAenN,GAAQ,SAAU5D,EAAWkH,EAAMsC,EAAM9M,EAAQG,GAC9D,OAAOwS,EAAAA,KAAKyB,EAAgBvS,KAArB8Q,CAA2BrP,EAAWwJ,EAAM9M,EAAQG,EAASqK,MAGxExE,EAAAA,KAAKqO,EAAgB,SAAUE,EAAarN,GAC1C,IAAIsN,EAAyB,WAATtN,EAAoB,SAAWA,EACnDlB,EAAAA,MAAM,KAAM,UAAW,SAAUyO,GAC/BjK,EAAKiK,EAAQvN,EAAK5G,eAAiBqS,EAAAA,KAAK4B,EAAa/J,EAAMgK,OAG/DhK,EAAKlL,EAAOgI,kBAAkB8B,eAAiBuJ,EAAAA,KAAK+B,EAAelK,GACnEA,EAAKlL,EAAOgI,kBAAkBqC,WAAaa,EAAKlL,EAAOgI,kBAAkB8B,eAG3E,SAAAyJ,EAAoChG,GAClC,IAAI8H,EAAgBC,EAAAA,UAAU/H,GAC9B,OAAOwG,EAAmBsB,EAAcrV,EAAOgI,kBAAkBG,gBAC/DkN,EAAeA,EAAcrV,EAAOgI,kBAAkBE,QAAQ,GAGlE,SAAA6L,EAA4BX,EAAQ7F,EAASrF,EAAOoC,EAAa2J,EAAa7K,GAC5E,IAAI8B,EAAOlL,EAAOiO,4BAA4BV,GAAS,EAAOrF,GAE1DqN,EAAYpC,EAAmBC,EAAQlI,EAAMhD,EAAOkB,EAAWkB,GAyBnE,OAvBItK,EAAOiM,kBACTsJ,EAAUvV,EAAOgI,kBAAkBK,cAAgBrI,EAAO4L,cAAc2J,IAGtEtB,IACFsB,EAAUvV,EAAOgI,kBAAkBgB,eAAiB,WAClD,OAAOiL,IAIXsB,EAAUvV,EAAOgI,kBAAkBI,wBAAyB,EAC5DmN,EAAUvV,EAAOgI,kBAAkBhC,KAAOqN,EAAAA,KAAKmC,EAAaD,GAC5DA,EAAUvV,EAAOgI,kBAAkBQ,SAAW6K,EAAAA,KAAK+B,EAAeG,GAClEA,EAAUvV,EAAOgI,kBAAkB9B,KAAOmN,EAAAA,KAAKoC,EAAaF,GAC5DA,EAAUvV,EAAOgI,kBAAkB/B,MAAQoN,EAAAA,KAAKqC,EAAcH,GAC9DA,EAAUvV,EAAOgI,kBAAkB7B,QAAUkN,EAAAA,KAAKsC,EAAgBJ,GAClEA,EAAUvV,EAAOgI,kBAAkBS,MAAQ4K,EAAAA,KAAKuC,EAAcL,GAC9DA,EAAUvV,EAAOgI,kBAAkBU,OAAS2K,EAAAA,KAAKwC,EAAeN,GAChEA,EAAUvV,EAAOgI,kBAAkBzH,SAAW8S,EAAAA,KAAKyC,EAAiBP,GACpEA,EAAUvV,EAAOgI,kBAAkBW,OAAS0K,EAAAA,KAAK0C,EAAeR,GAChEA,EAAUvV,EAAOgI,kBAAkB2C,MAAQ0I,EAAAA,KAAK1I,EAAM4K,GAEtDV,EAAmBU,GACZvV,EAAOyP,cAAc8F,GAAW,EAAOrN,EAAO+K,GAAS,GAGhE,SAAAe,EAAkCZ,EAAQ7F,EAASrF,EAAOoC,EAAalB,GACrE,IAAI8B,EAAOlL,EAAOiO,4BAA4BV,GAAS,EAAMrF,GAEzDqN,EAAYpC,EAAmBC,EAAQlI,EAAMhD,EAAOkB,EAAWkB,GAanE,OAZAiL,EAAUvV,EAAOgI,kBAAkBI,wBAAyB,EAC5DmN,EAAUvV,EAAOgI,kBAAkB/B,MAAQoN,EAAAA,KAAKqC,EAAcH,EAAW,MACzEA,EAAUvV,EAAOgI,kBAAkB7B,QAAUkN,EAAAA,KAAKsC,EAAgBJ,GAClEA,EAAUvV,EAAOgI,kBAAkBS,MAAQ4K,EAAAA,KAAKuC,EAAcL,GAC9DA,EAAUvV,EAAOgI,kBAAkBU,OAAS2K,EAAAA,KAAKwC,EAAeN,GAChEA,EAAUvV,EAAOgI,kBAAkBc,YAAcuK,EAAAA,KAAK2C,EAAoBT,GAC1EA,EAAUvV,EAAOgI,kBAAkBzH,SAAW8S,EAAAA,KAAKyC,EAAiBP,GACpEA,EAAUvV,EAAOgI,kBAAkBW,OAAS0K,EAAAA,KAAK0C,EAAeR,GAChEA,EAAUvV,EAAOgI,kBAAkBhC,KAAOqN,EAAAA,KAAK4C,EAASV,GACxDA,EAAUvV,EAAOgI,kBAAkBQ,SAAW6K,EAAAA,KAAK+B,EAAeG,EAAW,MAE7EV,EAAmBU,GACZvV,EAAOyP,cAAc8F,GAAW,EAAMrN,EAAO+K,GAAS,GAa/D,SAAAgD,EAAiBhO,EAAImB,EAAWvI,GAC9B,OAAO0B,KAAKsH,UAAU5B,EAAGiO,WAAY9M,EAAWvI,GAGlD,SAAAmV,EAA4BG,EAAKzV,EAAQG,GACvC,IAAI2Q,EAASjP,KACT6T,EAAY7T,KAAK4T,GACjBzJ,EAAU,IAAI2J,EAAAA,gBAAgB,MAC9BC,KAeJ,OAdAA,EAActW,EAAOyP,cAAc6G,GAAa,EAAMF,EAAUpW,EAAOgI,kBAAkBE,OAAQ+K,GAEjGmD,EAAUlQ,IAAIxF,EAAQG,GACrB0V,UAAU,SAAUC,GACnB,IAAIC,EAAWlD,EAA2B/B,GAC1CiF,EAASN,GAAOK,EAChBF,EAAcG,EACd/J,EAAQ+H,KAAKgC,IACZ,SAAUzT,GACX0J,EAAQpJ,MAAMN,IACb,WACD0J,EAAQgI,aAGHP,EAAuBzH,GAAS,EAAM4J,GAG/C,SAAAI,EAAuBC,EAAS3S,EAAWkE,EAAO4J,EAAU9O,EAAU0J,GACpE,IAAIrL,EAAOrB,EAAOwM,kBAAkBmK,EAAS3S,EAAWkE,EAAO4J,EAAU9O,EAAU0J,GAC/EpE,EAAOtF,EAASnC,QAAQmF,IAAI,QAIhC,OAHI3E,GAAQiH,IACVjH,EAAKrB,EAAOgI,kBAAkBM,MAAQA,GAEjCjH,EAGT,SAAA+T,EAAuB3I,EAAMrD,EAAWvI,GACtC,IAAI2Q,EAASjP,KACTmK,EAAU,IAAI2J,EAAAA,gBAAgB,MAC9BrS,EAAY,UACZ5C,EAAM8R,EAAWpB,SAASvP,KAAMkK,GAChCmK,EAAcnK,GAAQ+E,EAAOxR,EAAOgI,kBAAkBE,OAEtDhH,EAAUlB,EAAOyN,uBAAuB,KAAMzJ,EAChD4S,EAAaxV,EAAKP,MAAeuI,MAAiB7G,KAAKvC,EAAOgI,kBAAkBmB,iBAE9EmN,KACJA,EAActW,EAAOyP,cAAc6G,GAAa,EAAMM,EAAa3D,GAEnE,IAAIlS,EAAS,UAETf,EAAOqH,QACTtG,EAAS,SAGX,IAAI8V,EAAa,SAAU7T,GACzB,IAAI2T,EAAU3T,EAAS8T,KACnBC,EAAa/T,EAAShD,OAAOU,OAC7BW,EAAOqV,EAAcC,EAAS3S,EAAW4S,EAAaxV,EAAK4B,EAAU0J,GAMzE,IAHIpI,EAAAA,YAAYjD,IAAS,KAAOA,KAC9BA,OAEGjB,EAAAA,QAAQiB,GACX,MAAM,IAAI0G,MAAM,+EAGlB,IAAI,IAAS/H,EAAOsF,eAClB,OAAOiP,EAAe7H,EAAS1J,EAAU3B,EAAMiV,GAGjD,IAAIU,EAAgBjU,EAAAA,IAAI1B,EAAM,SAAU6J,GACtC,OAAKsG,EAAOxR,EAAOgI,kBAAkBI,uBAG5B2L,EAAmBvC,EAAOxR,EAAOgI,kBAAkBG,gBACxD+C,EAAMsG,EAAOxR,EAAOgI,kBAAkBE,QAAQ,EAAM7G,GAH/C0S,EAAmBvC,EAAQtG,EAAMuB,GAAM,EAAMpL,KAOxD2V,EAAgB7P,EAAAA,OAAO9F,EAAM2V,GAExBxF,EAAOxR,EAAOgI,kBAAkBI,uBAcnCmM,EACE7H,EACA1J,EACAgR,EACExC,EAAOxR,EAAOgI,kBAAkBG,gBAChC6O,EACAxF,EAAOxR,EAAOgI,kBAAkBE,QAChC,EACA6O,GAEFT,GAvBF/B,EACE7H,EACA1J,EACAgR,EACExC,EACAwF,EACAvK,GACA,EACAsK,GAEFT,IAgCN,OAdApD,EAAW1C,SAASjO,KAAMkO,EAAOvP,EAAQiI,WAAYjI,EAAQL,QAASK,EAAQR,OAAQ+L,EACpFlK,KAAKvC,EAAOgI,kBAAkBM,MAAOtE,GAAWjD,KACjDwV,UAAUM,EAAY,SAAe7T,GACZ,MAApBA,EAASiU,QAAkBzF,EAAOxR,EAAOgI,kBAAkBI,uBAC7DmM,EAAe7H,EAAS1J,EAAUwO,EAAQ8E,GACjCY,EAAAA,MAAMlX,EAAOgN,kBAAmB,SAAUmK,GAEjD,OAA6C,IAAtCA,EAAGnU,EAAU0J,EAASmK,MAG/BnK,EAAQpJ,MAAMN,KAIXmR,EAAuBzH,GAAS,EAAM4J,GAG/C,SAAA9L,EAAwBrB,GAEtB,OADA5G,KAAKvC,EAAOgI,kBAAkBmB,YAAcA,EACrC5G,KAGT,SAAAoI,EAAcjK,EAAQG,GACpB,OAAI0B,KAAKvC,EAAOgI,kBAAkBsC,YACzB/H,KAAKvC,EAAOgI,kBAAkB9B,KAAKxF,EAAQG,GAE3CwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,OAAQrC,UAAWtQ,EAAQsQ,UAAWnQ,GAI1E,SAAAuW,EAAsBpT,EAAWyI,EAAM/L,EAAQgF,EAAK7E,GAClD,IAAI2Q,EAASjP,KACTmK,EAAU,IAAI2J,EAAAA,gBAAgB,MAC9BgB,EAAY3W,MACZwH,EAAQuE,GAAQlK,KAAKvC,EAAOgI,kBAAkBE,OAC9C4J,EAAWoB,EAAWpB,SAASvP,KAAMkK,GAErC6K,EAAU5R,GAAOnD,KAEjB+F,EAAOgP,EAAQtX,EAAOgI,kBAAkBM,QAAwB,SAAdtE,EAAuBzB,KAAKvC,EAAOgI,kBAAkBM,MAAQ,MAE/GqK,EAAAA,SAAS2E,IAAYtX,EAAO+K,kBAAkBuM,KAChDA,EAAU9D,EAAiB8D,IAE7B,IAAIpW,EAAUlB,EAAOyN,uBAAuB6J,EAAStT,EAAWkE,EAAO4J,EACrEjR,MAAewW,MAAiB9U,KAAKvC,EAAOgI,kBAAkBmB,iBAE5DoO,KACJA,EAAevX,EAAOyP,cAAc8H,GAAc,EAAOrP,EAAO+K,GAEhE,IAAI4D,EAAa,SAAU7T,GACzB,IAAI2T,EAAU3Q,EAAAA,IAAIhD,EAAU,QACxB+T,EAAa/Q,EAAAA,IAAIhD,EAAU,iBAE3BkI,EAAOwL,EAAcC,EAAS3S,EAAWkE,EAAO4J,EAAU9O,EAAU0J,GAExE,GAAIxB,EAAM,CACR,IAAI7J,EACJ,IAAI,IAASrB,EAAOsF,eAClB,OAAOiP,EAAe7H,EAAS1J,EAAUkI,EAAMqM,GAG/B,SAAdvT,GAAyBwN,EAAOxR,EAAOgI,kBAAkBI,wBAW3D/G,EAAO0S,EACLvC,EAAOxR,EAAOgI,kBAAkBG,gBAChC+C,EACAsG,EAAOxR,EAAOgI,kBAAkBE,QAChC,EACA,KACA6O,IAGG/W,EAAOgI,kBAAkByC,WAAa+G,EAAOxR,EAAOgI,kBAAkByC,WAnB3EpJ,EAAO0S,EACLvC,EAAOxR,EAAOgI,kBAAkBG,gBAChC+C,EACAhD,GACA,EACA,KACA6O,GAcFxC,EAAe7H,EAAS1J,EAAU3B,EAAMkW,QAI1ChD,EAAe7H,EAAS1J,EAAUgO,UAAWuG,IAI7CC,EAAgB,SAAUxU,GACJ,MAApBA,EAASiU,QAAkBjX,EAAO+D,OAAOC,GAC3CuQ,EAAe7H,EAAS1J,EAAUwO,EAAQ+F,GACjCL,EAAAA,MAAMlX,EAAOgN,kBAAmB,SAAUmK,GACjD,OAA6C,IAAtCA,EAAGnU,EAAU0J,EAASmK,MAG/BnK,EAAQpJ,MAAMN,IAIdkS,EAAgBlR,EAChB2M,EAAcxJ,EAAAA,UAAWjG,EAAQL,SACjC4W,EAAsBzX,EAAOoH,kBAAkBpD,GAqBnD,OApBIyT,GACFvC,EAAgB,OAChBvE,EAAcxJ,EAAAA,OAAOwJ,GAAc+G,yBAAwC,WAAd1T,EAAyB,SAAWA,EAAUhD,iBAClGhB,EAAOqH,OAA2B,QAAlB6N,IACzBA,EAAgB,SAGdlV,EAAO+D,OAAOC,GACZyT,EACFvE,EAAW1C,SAASjO,KAAMkO,EAAOvP,EAAQiI,WAAYwH,EAAazP,EAAQR,OACxE+L,EAAMnE,EAAM4M,GAAeA,OAAmBqB,UAAUM,EAAYW,GAEtEtE,EAAW1C,SAASjO,KAAMkO,EAAOvP,EAAQiI,WAAYwH,EAAazP,EAAQR,OACxE+L,EAAMnE,EAAM4M,GAAeA,KAAiBqB,UAAUM,EAAYW,GAGtEtE,EAAW1C,SAASjO,KAAMkO,EAAOvP,EAAQiI,WAAYwH,EAAazP,EAAQR,OACxE+L,EAAMnE,EAAM4M,GAAeA,GAAehU,EAAQqM,SAASgJ,UAAUM,EAAYW,GAG9ErD,EAAuBzH,GAAS,EAAO6K,GAGhD,SAAA/B,EAAqB9U,EAAQG,GAC3B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,MAAOrC,UAAWtQ,EAAQsQ,UAAWnQ,GAGvE,SAAA8U,EAAwBjV,EAAQG,GAC9B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,SAAUrC,UAAWtQ,EAAQsQ,UAAWnQ,GAG1E,SAAA4U,EAAqB/U,EAAQG,GAC3B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,MAAOrC,UAAWtQ,EAAQsQ,UAAWnQ,GAGvE,SAAA6U,EAAsBjJ,EAAMvB,EAAMxK,EAAQG,GACxC,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,OAAQ5G,EAAM/L,EAAQwK,EAAMrK,GAG9D,SAAA+U,EAAsBlV,EAAQG,GAC5B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,OAAQrC,UAAWtQ,EAAQsQ,UAAWnQ,GAGxE,SAAAgV,EAAuBnV,EAAQG,GAC7B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,QAASrC,UAAWtQ,EAAQsQ,UAAWnQ,GAGzE,SAAAiV,EAAyBpV,EAAQG,GAC/B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,UAAWrC,UAAWtQ,EAAQsQ,UAAWnQ,GAG3E,SAAAkV,EAAuB7K,EAAMxK,EAAQG,GACnC,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,QAASrC,UAAWtQ,EAAQwK,EAAMrK,GAGpE,SAAAiU,EAAwB9Q,EAAWwJ,EAAM9M,EAAQG,EAASqK,GACxD,OAAOmI,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyBrP,EAAWwJ,EAAM9M,EAAQwK,EAAMrK,GAGjE,SAAAyS,EAAsC1L,EAAM5D,EAAWwJ,EAAMmK,EAAe/Q,EAAgBgR,GAC1F,IAAIC,EAEFA,EADgB,YAAd7T,EACeqP,EAAAA,KAAK+B,EAAe7S,KAAMiL,GAE1B6F,EAAAA,KAAKyB,EAAgBvS,KAAMyB,EAAWwJ,GAGzD,IAAIsK,EAAkB,SAAUpX,EAAQG,EAASqK,GAC/C,IAAI0F,EAAajL,EAAAA,UACfjF,OAAQA,EACRG,QAASA,EACTqK,KAAMA,IAENxK,OAAQiX,EACR9W,QAAS+F,EACTsE,KAAM0M,IAER,OAAOC,EAAejH,EAAWlQ,OAAQkQ,EAAW/P,QAAS+P,EAAW1F,OAGtElL,EAAO+D,OAAOC,GAChBzB,KAAKqF,GAAQkQ,EAEbvV,KAAKqF,GAAQ,SAAUsD,EAAMxK,EAAQG,GACnC,OAAOiX,EAAgBpX,EAAQG,EAASqK,IAwD9C,OAvjBAgI,EAAW/C,UAAUnQ,GA+hBrB2D,EAAsBsP,EAASjT,GAE/BiT,EAAQ8E,KAAO1E,EAAAA,KAAKE,EAA4BN,GAEhDA,EAAQA,QAAUI,EAAAA,KAxBlB,SAAmBnL,EAAOkL,GACxB,IAAI4E,EAAyB3S,EAAAA,OAAOrF,EAAOgI,mBACvCiQ,KACAhE,GAAcb,GAAUH,GAAS5J,IAAInB,GAQzC,IAAK,IAAIqD,KAPT0M,EAAKxQ,IAAM4L,EAAAA,KAAK5L,EAAM2L,GAAUH,EAAUG,EAAQlL,GAClD+P,EAAK5O,IAAMgK,EAAAA,KAAKY,EAAW5K,IAAK4K,GAChCgE,EAAKhS,KAAOoN,EAAAA,KAAKY,EAAWhO,KAAMgO,GAClCgE,EAAKzP,QAAU6K,EAAAA,KAAKY,EAAWzL,QAASyL,GACxCgE,EAAKzN,eAAiB6I,EAAAA,KAAKY,EAAWzJ,eAAgByJ,GACtDgE,EAAKjS,IAAMqN,EAAAA,KAAKY,EAAWjO,IAAKiO,GAEfA,EACXA,EAAW7B,eAAe7G,IAAS2M,EAAAA,WAAWjE,EAAW1I,MAAWtH,EAAAA,SAAS+T,EAAwBzM,KACvG0M,EAAK1M,GAAQ8H,EAAAA,KAAKY,EAAW1I,GAAO0I,IAIxC,OAAOgE,GAOyBhF,GAElCA,EAAQ1I,WAAa8I,EAAAA,KAjCrB,SAAmCxC,GACjC,IAAIsH,EAAYlP,EAAAA,MAAM2L,EAAAA,KAAK5U,EAAQ,kBAGnC,OAFA2D,EAAsBwU,EAAWA,GACjCtH,EAAWsH,GACJnF,EAA8BmF,IA6BclF,GAErDA,EAAQxL,IAAM4L,EAAAA,KAAK5L,EAAKwL,EAAS,MAEjCA,EAAQ5J,IAAMgK,EAAAA,KAAKhK,EAAK4J,EAAS,MAEjCA,EAAQ3J,QAAU+J,EAAAA,KAAK/J,EAAS2J,EAAS,MAEzCA,EAAQ1J,OAAS8J,EAAAA,KAAK9J,EAAQ0J,EAAS,MAEvCA,EAAQzJ,OAAS6J,EAAAA,KAAK7J,EAAQyJ,EAAS,MAEvCA,EAAQO,iBAAmBH,EAAAA,KAAKG,EAAkBP,GAElDA,EAAQmF,sBAAwB/E,EAAAA,KAAKU,EAAoBd,GAEzDA,EAAQe,yBAA2BX,EAAAA,KA5WnC,SAA6CD,EAAQ7F,EAASrF,GAC5D,IAAI+L,EAAaD,EAAyBZ,EAAQ7F,EAASrF,GAAO,GAMlE,OALAxB,EAAAA,KAAKuN,EAAY,SAAU/I,GACrBA,GACF6I,EAAmBX,EAAQlI,EAAMhD,GAAO,KAGrC+L,GAqWoEhB,GAEtEA,EAGT,OA9jBA,SAAuCjT,GACrC,IAAIiT,KAEJ,IAAIC,EAAa,IAAIlT,EAAO8H,kBAAkB9H,EAAO0H,YACrDwL,EAAW/C,UAAUnQ,GAErB,SAAAmT,EAA4BC,EAAQlI,EAAMhD,EAAOkB,EAAWkB,GAsB1D,GArBAY,EAAKlL,EAAOgI,kBAAkBE,OAASA,EACvCgD,EAAKlL,EAAOgI,kBAAkBY,mBAAqByK,EAAAA,KAAKH,EAAWpB,SAAUoB,EAAYhI,GACzFA,EAAKlL,EAAOgI,kBAAkBa,iBAAmBwK,EAAAA,KAAKH,EAAWnB,kBAAmBmB,EAAYhI,GAChGA,EAAKlL,EAAOgI,kBAAkBe,sBAAwBsK,EAAAA,KAAKC,EAA8BpI,GACzFA,EAAKlL,EAAOgI,kBAAkBiB,OAASoK,EAAAA,KAAKE,EAA4BrI,GACxEA,EAAKlL,EAAOgI,kBAAkBoB,WAAa8H,EAAAA,QAAQ9H,GAAa,KAAOA,EACvE8B,EAAKlL,EAAOgI,kBAAkBwC,gBAAkB6I,EAAAA,KAAK7I,EAAgBU,GACrEA,EAAKlL,EAAOgI,kBAAkB0C,OAAS2I,EAAAA,KAAKG,EAAkBtI,EAAMA,GAGpEA,EAAKlL,EAAOgI,kBAAkB4C,kBAAmB,EAGjDM,EAAKlL,EAAOgI,kBAAkBP,KAAO4L,EAAAA,KAAK5L,EAAKyD,EAAMA,GACrDA,EAAKlL,EAAOgI,kBAAkBqB,KAAOgK,EAAAA,KAAKhK,EAAK6B,EAAMA,GACrDA,EAAKlL,EAAOgI,kBAAkBsB,SAAW+J,EAAAA,KAAK/J,EAAS4B,EAAMA,GAC7DA,EAAKlL,EAAOgI,kBAAkBuB,QAAU8J,EAAAA,KAAK9J,EAAQ2B,EAAMA,GAC3DA,EAAKlL,EAAOgI,kBAAkBwB,QAAU6J,EAAAA,KAAK7J,EAAQ0B,EAAMA,GAE3DA,EAAKlL,EAAOgI,kBAAkBsC,cAAgBA,EAE1C8I,GAAUpT,EAAOuO,iBAAiBrG,GAAQ,CAC5C,IAAIuL,EAAWzT,EAAO4L,cAAcwH,GAChCM,EAAY1T,EAAOgM,eAAeoH,GAElCO,EAA6BC,EAAAA,MAC/BvO,EAAAA,OAAOwO,EAAAA,KAAK7T,EAAOgI,mBAAoB,QAAS,YAAa,oBAC7DhI,EAAOgF,aAELmD,EAAiB0L,EAAAA,KAAKT,EAAQO,GAE9B3T,EAAO6L,UAAU4H,IACnBzT,EAAO2L,YAAYxD,EAAgBsL,EAAUvL,GAE3ClI,EAAO6L,UAAU6H,IACnB1T,EAAO+L,aAAa5D,EAAgBuL,EAAWxL,GAGjDgD,EAAKlL,EAAOgI,kBAAkBG,gBAAkBA,OAEhD+C,EAAKlL,EAAOgI,kBAAkBG,gBAAkB,KAElD,OAAO+C,EAGT,SAAAzD,EAAa2L,EAAQlL,EAAOD,EAAIwC,GAC9B,IAAInH,EACJ,GAAIwQ,EAAAA,SAAS5L,IAAU4L,EAAAA,SAASV,GAG9B,MAFA9P,EAAQ,wDACRA,GAAS,4EACH,IAAIyE,MAAMzE,GAElB,GAAIgB,EAAAA,YAAY4D,GAGd,MAFA5E,EAAQ,iEACRA,GAAS,+EACH,IAAIyE,MAAMzE,GAElB,IAAI4H,KAGJ,OAFAlL,EAAO2L,YAAYT,EAAMjD,EAAIC,GAC7BlI,EAAOgL,eAAehL,EAAOgI,kBAAkByC,UAAWS,EAAMT,GACzDsJ,EAAmBX,EAAQlI,EAAMhD,GAAO,GAGjD,SAAAmB,EAAa+J,EAAQlL,GACnB,OAAO8L,EAAyBZ,KAAYlL,GAAO,GAGrD,SAAAoB,EAAiB8J,EAAQlL,GACvB,IAAI+L,KAEJ,OADAA,EAAWjU,EAAOgI,kBAAkBkB,KAAOpH,MAAMU,UAAU0R,OAAO1B,KAAKpD,UAAW,GAC3E4E,EAAyBZ,EAAQa,EAAY/L,GAAO,GAG7D,SAAAqB,EAAgB6J,EAAQlL,EAAO9G,GAC7B,IAAK8G,EACH,MAAM,IAAIH,MAAM,6DAElB,IAAImD,KAEJ,OADAlL,EAAO+L,aAAab,EAAM9J,EAAK8G,GACxB6L,EAAmBX,EAAQlI,EAAMhD,GAAO,GAGjD,SAAAsB,EAAgB4J,EAAQlL,EAAO9G,GAC7B,IAAK8G,EACH,MAAM,IAAIH,MAAM,6DAElB,IAAImD,KAEJ,OADAlL,EAAO+L,aAAab,EAAM9J,EAAK8G,GACxB8L,EAAyBZ,EAAQlI,EAAMhD,GAAO,GAIvD,SAAAiM,EAAgCzH,EAASwC,EAAckF,GACrD,OAAO1H,EAAQ/J,KAAKC,EAAAA,OAAO,SAAAyR,GAAO,QAAEA,KAAMC,YAG5C,SAAAC,EAAwB7H,EAAS1J,EAAU3B,EAAMmT,GAC/CrN,EAAAA,OAAOqN,EAAanT,GAGhBrB,EAAO+P,aACTrD,EAAQ+H,KAAKtN,EAAAA,OAAOnE,GAClB3B,KAAMA,KAGRqL,EAAQ+H,KAAKpT,GAGfqL,EAAQgI,WAIV,SAAAlB,EAA0BtI,GACxB,GAAI9K,EAAAA,QAAQ8K,GAAO,CACjB,IAAIyJ,KAIJ,OAHAjO,EAAAA,KAAKwE,EAAM,SAAUrJ,GACnB8S,EAAMlO,KAAKzG,EAAO+K,kBAAkBlJ,GAAS2R,EAAiB3R,GAASA,KAElE8S,EAEP,OAAOC,EAAAA,KAAK1J,EAAM7F,EAAAA,OAAOuP,EAAAA,KAAK5U,EAAOgI,kBAAmB,QAI5D,SAAA6M,EAA4B3J,GAC1BA,EAAKlL,EAAOgI,kBAAkB+B,iBAAmBsJ,EAAAA,KAAKyB,EAAgB5J,GACtE,IAAI6J,GAAkB/O,IAAK8O,EAAgBE,SAAQF,GACnDpO,EAAAA,MAAM,MAAO,QAAS,QAAS,SAAUkB,GACvCmN,EAAenN,GAAQ,SAAU5D,EAAWkH,EAAMsC,EAAM9M,EAAQG,GAC9D,OAAOwS,EAAAA,KAAKyB,EAAgBvS,KAArB8Q,CAA2BrP,EAAWwJ,EAAM9M,EAAQG,EAASqK,MAGxExE,EAAAA,KAAKqO,EAAgB,SAAUE,EAAarN,GAC1C,IAAIsN,EAAyB,WAATtN,EAAoB,SAAWA,EACnDlB,EAAAA,MAAM,KAAM,UAAW,SAAUyO,GAC/BjK,EAAKiK,EAAQvN,EAAK5G,eAAiBqS,EAAAA,KAAK4B,EAAa/J,EAAMgK,OAG/DhK,EAAKlL,EAAOgI,kBAAkB8B,eAAiBuJ,EAAAA,KAAK+B,EAAelK,GACnEA,EAAKlL,EAAOgI,kBAAkBqC,WAAaa,EAAKlL,EAAOgI,kBAAkB8B,eAG3E,SAAAyJ,EAAoChG,GAClC,IAAI8H,EAAgBC,EAAAA,UAAU/H,GAC9B,OAAOwG,EAAmBsB,EAAcrV,EAAOgI,kBAAkBG,gBAC/DkN,EAAeA,EAAcrV,EAAOgI,kBAAkBE,QAAQ,GAGlE,SAAA6L,EAA4BX,EAAQ7F,EAASrF,EAAOoC,EAAa2J,EAAa7K,GAC5E,IAAI8B,EAAOlL,EAAOiO,4BAA4BV,GAAS,EAAOrF,GAE1DqN,EAAYpC,EAAmBC,EAAQlI,EAAMhD,EAAOkB,EAAWkB,GAyBnE,OAvBItK,EAAOiM,kBACTsJ,EAAUvV,EAAOgI,kBAAkBK,cAAgBrI,EAAO4L,cAAc2J,IAGtEtB,IACFsB,EAAUvV,EAAOgI,kBAAkBgB,eAAiB,WAClD,OAAOiL,IAIXsB,EAAUvV,EAAOgI,kBAAkBI,wBAAyB,EAC5DmN,EAAUvV,EAAOgI,kBAAkBhC,KAAOqN,EAAAA,KAAKmC,EAAaD,GAC5DA,EAAUvV,EAAOgI,kBAAkBQ,SAAW6K,EAAAA,KAAK+B,EAAeG,GAClEA,EAAUvV,EAAOgI,kBAAkB9B,KAAOmN,EAAAA,KAAKoC,EAAaF,GAC5DA,EAAUvV,EAAOgI,kBAAkB/B,MAAQoN,EAAAA,KAAKqC,EAAcH,GAC9DA,EAAUvV,EAAOgI,kBAAkB7B,QAAUkN,EAAAA,KAAKsC,EAAgBJ,GAClEA,EAAUvV,EAAOgI,kBAAkBS,MAAQ4K,EAAAA,KAAKuC,EAAcL,GAC9DA,EAAUvV,EAAOgI,kBAAkBU,OAAS2K,EAAAA,KAAKwC,EAAeN,GAChEA,EAAUvV,EAAOgI,kBAAkBzH,SAAW8S,EAAAA,KAAKyC,EAAiBP,GACpEA,EAAUvV,EAAOgI,kBAAkBW,OAAS0K,EAAAA,KAAK0C,EAAeR,GAChEA,EAAUvV,EAAOgI,kBAAkB2C,MAAQ0I,EAAAA,KAAK1I,EAAM4K,GAEtDV,EAAmBU,GACZvV,EAAOyP,cAAc8F,GAAW,EAAOrN,EAAO+K,GAAS,GAGhE,SAAAe,EAAkCZ,EAAQ7F,EAASrF,EAAOoC,EAAalB,GACrE,IAAI8B,EAAOlL,EAAOiO,4BAA4BV,GAAS,EAAMrF,GAEzDqN,EAAYpC,EAAmBC,EAAQlI,EAAMhD,EAAOkB,EAAWkB,GAanE,OAZAiL,EAAUvV,EAAOgI,kBAAkBI,wBAAyB,EAC5DmN,EAAUvV,EAAOgI,kBAAkB/B,MAAQoN,EAAAA,KAAKqC,EAAcH,EAAW,MACzEA,EAAUvV,EAAOgI,kBAAkB7B,QAAUkN,EAAAA,KAAKsC,EAAgBJ,GAClEA,EAAUvV,EAAOgI,kBAAkBS,MAAQ4K,EAAAA,KAAKuC,EAAcL,GAC9DA,EAAUvV,EAAOgI,kBAAkBU,OAAS2K,EAAAA,KAAKwC,EAAeN,GAChEA,EAAUvV,EAAOgI,kBAAkBc,YAAcuK,EAAAA,KAAK2C,EAAoBT,GAC1EA,EAAUvV,EAAOgI,kBAAkBzH,SAAW8S,EAAAA,KAAKyC,EAAiBP,GACpEA,EAAUvV,EAAOgI,kBAAkBW,OAAS0K,EAAAA,KAAK0C,EAAeR,GAChEA,EAAUvV,EAAOgI,kBAAkBhC,KAAOqN,EAAAA,KAAK4C,EAASV,GACxDA,EAAUvV,EAAOgI,kBAAkBQ,SAAW6K,EAAAA,KAAK+B,EAAeG,EAAW,MAE7EV,EAAmBU,GACZvV,EAAOyP,cAAc8F,GAAW,EAAMrN,EAAO+K,GAAS,GAa/D,SAAAgD,EAAiBhO,EAAImB,EAAWvI,GAC9B,OAAO0B,KAAKsH,UAAU5B,EAAGiO,WAAY9M,EAAWvI,GAGlD,SAAAmV,EAA4BG,EAAKzV,EAAQG,GACvC,IAAI2Q,EAASjP,KACT6T,EAAY7T,KAAK4T,GACjBzJ,EAAU,IAAI2J,EAAAA,gBAAgB,MAC9BC,KAeJ,OAdAA,EAActW,EAAOyP,cAAc6G,GAAa,EAAMF,EAAUpW,EAAOgI,kBAAkBE,OAAQ+K,GAEjGmD,EAAUlQ,IAAIxF,EAAQG,GACrB0V,UAAU,SAAUC,GACnB,IAAIC,EAAWlD,EAA2B/B,GAC1CiF,EAASN,GAAOK,EAChBF,EAAcG,EACd/J,EAAQ+H,KAAKgC,IACZ,SAAUzT,GACX0J,EAAQpJ,MAAMN,IACb,WACD0J,EAAQgI,aAGHP,EAAuBzH,GAAS,EAAM4J,GAG/C,SAAAI,EAAuBC,EAAS3S,EAAWkE,EAAO4J,EAAU9O,EAAU0J,GACpE,IAAIrL,EAAOrB,EAAOwM,kBAAkBmK,EAAS3S,EAAWkE,EAAO4J,EAAU9O,EAAU0J,GAC/EpE,EAAOtF,EAASnC,QAAQmF,IAAI,QAIhC,OAHI3E,GAAQiH,IACVjH,EAAKrB,EAAOgI,kBAAkBM,MAAQA,GAEjCjH,EAGT,SAAA+T,EAAuB3I,EAAMrD,EAAWvI,GACtC,IAAI2Q,EAASjP,KACTmK,EAAU,IAAI2J,EAAAA,gBAAgB,MAC9BrS,EAAY,UACZ5C,EAAM8R,EAAWpB,SAASvP,KAAMkK,GAChCmK,EAAcnK,GAAQ+E,EAAOxR,EAAOgI,kBAAkBE,OAEtDhH,EAAUlB,EAAOyN,uBAAuB,KAAMzJ,EAChD4S,EAAaxV,EAAKP,MAAeuI,MAAiB7G,KAAKvC,EAAOgI,kBAAkBmB,iBAE9EmN,KACJA,EAActW,EAAOyP,cAAc6G,GAAa,EAAMM,EAAa3D,GAEnE,IAAIlS,EAAS,UAETf,EAAOqH,QACTtG,EAAS,SAGX,IAAI8V,EAAa,SAAU7T,GACzB,IAAI2T,EAAU3T,EAAS8T,KACnBC,EAAa/T,EAAShD,OAAOU,OAC7BW,EAAOqV,EAAcC,EAAS3S,EAAW4S,EAAaxV,EAAK4B,EAAU0J,GAMzE,IAHIpI,EAAAA,YAAYjD,IAAS,KAAOA,KAC9BA,OAEGjB,EAAAA,QAAQiB,GACX,MAAM,IAAI0G,MAAM,+EAGlB,IAAI,IAAS/H,EAAOsF,eAClB,OAAOiP,EAAe7H,EAAS1J,EAAU3B,EAAMiV,GAGjD,IAAIU,EAAgBjU,EAAAA,IAAI1B,EAAM,SAAU6J,GACtC,OAAKsG,EAAOxR,EAAOgI,kBAAkBI,uBAG5B2L,EAAmBvC,EAAOxR,EAAOgI,kBAAkBG,gBACxD+C,EAAMsG,EAAOxR,EAAOgI,kBAAkBE,QAAQ,EAAM7G,GAH/C0S,EAAmBvC,EAAQtG,EAAMuB,GAAM,EAAMpL,KAOxD2V,EAAgB7P,EAAAA,OAAO9F,EAAM2V,GAExBxF,EAAOxR,EAAOgI,kBAAkBI,uBAcnCmM,EACE7H,EACA1J,EACAgR,EACExC,EAAOxR,EAAOgI,kBAAkBG,gBAChC6O,EACAxF,EAAOxR,EAAOgI,kBAAkBE,QAChC,EACA6O,GAEFT,GAvBF/B,EACE7H,EACA1J,EACAgR,EACExC,EACAwF,EACAvK,GACA,EACAsK,GAEFT,IAgCN,OAdApD,EAAW1C,SAASjO,KAAMkO,EAAOvP,EAAQiI,WAAYjI,EAAQL,QAASK,EAAQR,OAAQ+L,EACpFlK,KAAKvC,EAAOgI,kBAAkBM,MAAOtE,GAAWjD,KACjDwV,UAAUM,EAAY,SAAe7T,GACZ,MAApBA,EAASiU,QAAkBzF,EAAOxR,EAAOgI,kBAAkBI,uBAC7DmM,EAAe7H,EAAS1J,EAAUwO,EAAQ8E,GACjCY,EAAAA,MAAMlX,EAAOgN,kBAAmB,SAAUmK,GAEjD,OAA6C,IAAtCA,EAAGnU,EAAU0J,EAASmK,MAG/BnK,EAAQpJ,MAAMN,KAIXmR,EAAuBzH,GAAS,EAAM4J,GAG/C,SAAA9L,EAAwBrB,GAEtB,OADA5G,KAAKvC,EAAOgI,kBAAkBmB,YAAcA,EACrC5G,KAGT,SAAAoI,EAAcjK,EAAQG,GACpB,OAAI0B,KAAKvC,EAAOgI,kBAAkBsC,YACzB/H,KAAKvC,EAAOgI,kBAAkB9B,KAAKxF,EAAQG,GAE3CwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,OAAQrC,UAAWtQ,EAAQsQ,UAAWnQ,GAI1E,SAAAuW,EAAsBpT,EAAWyI,EAAM/L,EAAQgF,EAAK7E,GAClD,IAAI2Q,EAASjP,KACTmK,EAAU,IAAI2J,EAAAA,gBAAgB,MAC9BgB,EAAY3W,MACZwH,EAAQuE,GAAQlK,KAAKvC,EAAOgI,kBAAkBE,OAC9C4J,EAAWoB,EAAWpB,SAASvP,KAAMkK,GAErC6K,EAAU5R,GAAOnD,KAEjB+F,EAAOgP,EAAQtX,EAAOgI,kBAAkBM,QAAwB,SAAdtE,EAAuBzB,KAAKvC,EAAOgI,kBAAkBM,MAAQ,MAE/GqK,EAAAA,SAAS2E,IAAYtX,EAAO+K,kBAAkBuM,KAChDA,EAAU9D,EAAiB8D,IAE7B,IAAIpW,EAAUlB,EAAOyN,uBAAuB6J,EAAStT,EAAWkE,EAAO4J,EACrEjR,MAAewW,MAAiB9U,KAAKvC,EAAOgI,kBAAkBmB,iBAE5DoO,KACJA,EAAevX,EAAOyP,cAAc8H,GAAc,EAAOrP,EAAO+K,GAEhE,IAAI4D,EAAa,SAAU7T,GACzB,IAAI2T,EAAU3Q,EAAAA,IAAIhD,EAAU,QACxB+T,EAAa/Q,EAAAA,IAAIhD,EAAU,iBAE3BkI,EAAOwL,EAAcC,EAAS3S,EAAWkE,EAAO4J,EAAU9O,EAAU0J,GAExE,GAAIxB,EAAM,CACR,IAAI7J,EACJ,IAAI,IAASrB,EAAOsF,eAClB,OAAOiP,EAAe7H,EAAS1J,EAAUkI,EAAMqM,GAG/B,SAAdvT,GAAyBwN,EAAOxR,EAAOgI,kBAAkBI,wBAW3D/G,EAAO0S,EACLvC,EAAOxR,EAAOgI,kBAAkBG,gBAChC+C,EACAsG,EAAOxR,EAAOgI,kBAAkBE,QAChC,EACA,KACA6O,IAGG/W,EAAOgI,kBAAkByC,WAAa+G,EAAOxR,EAAOgI,kBAAkByC,WAnB3EpJ,EAAO0S,EACLvC,EAAOxR,EAAOgI,kBAAkBG,gBAChC+C,EACAhD,GACA,EACA,KACA6O,GAcFxC,EAAe7H,EAAS1J,EAAU3B,EAAMkW,QAI1ChD,EAAe7H,EAAS1J,EAAUgO,UAAWuG,IAI7CC,EAAgB,SAAUxU,GACJ,MAApBA,EAASiU,QAAkBjX,EAAO+D,OAAOC,GAC3CuQ,EAAe7H,EAAS1J,EAAUwO,EAAQ+F,GACjCL,EAAAA,MAAMlX,EAAOgN,kBAAmB,SAAUmK,GACjD,OAA6C,IAAtCA,EAAGnU,EAAU0J,EAASmK,MAG/BnK,EAAQpJ,MAAMN,IAIdkS,EAAgBlR,EAChB2M,EAAcxJ,EAAAA,UAAWjG,EAAQL,SACjC4W,EAAsBzX,EAAOoH,kBAAkBpD,GAqBnD,OApBIyT,GACFvC,EAAgB,OAChBvE,EAAcxJ,EAAAA,OAAOwJ,GAAc+G,yBAAwC,WAAd1T,EAAyB,SAAWA,EAAUhD,iBAClGhB,EAAOqH,OAA2B,QAAlB6N,IACzBA,EAAgB,SAGdlV,EAAO+D,OAAOC,GACZyT,EACFvE,EAAW1C,SAASjO,KAAMkO,EAAOvP,EAAQiI,WAAYwH,EAAazP,EAAQR,OACxE+L,EAAMnE,EAAM4M,GAAeA,OAAmBqB,UAAUM,EAAYW,GAEtEtE,EAAW1C,SAASjO,KAAMkO,EAAOvP,EAAQiI,WAAYwH,EAAazP,EAAQR,OACxE+L,EAAMnE,EAAM4M,GAAeA,KAAiBqB,UAAUM,EAAYW,GAGtEtE,EAAW1C,SAASjO,KAAMkO,EAAOvP,EAAQiI,WAAYwH,EAAazP,EAAQR,OACxE+L,EAAMnE,EAAM4M,GAAeA,GAAehU,EAAQqM,SAASgJ,UAAUM,EAAYW,GAG9ErD,EAAuBzH,GAAS,EAAO6K,GAGhD,SAAA/B,EAAqB9U,EAAQG,GAC3B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,MAAOrC,UAAWtQ,EAAQsQ,UAAWnQ,GAGvE,SAAA8U,EAAwBjV,EAAQG,GAC9B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,SAAUrC,UAAWtQ,EAAQsQ,UAAWnQ,GAG1E,SAAA4U,EAAqB/U,EAAQG,GAC3B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,MAAOrC,UAAWtQ,EAAQsQ,UAAWnQ,GAGvE,SAAA6U,EAAsBjJ,EAAMvB,EAAMxK,EAAQG,GACxC,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,OAAQ5G,EAAM/L,EAAQwK,EAAMrK,GAG9D,SAAA+U,EAAsBlV,EAAQG,GAC5B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,OAAQrC,UAAWtQ,EAAQsQ,UAAWnQ,GAGxE,SAAAgV,EAAuBnV,EAAQG,GAC7B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,QAASrC,UAAWtQ,EAAQsQ,UAAWnQ,GAGzE,SAAAiV,EAAyBpV,EAAQG,GAC/B,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,UAAWrC,UAAWtQ,EAAQsQ,UAAWnQ,GAG3E,SAAAkV,EAAuB7K,EAAMxK,EAAQG,GACnC,OAAOwS,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyB,QAASrC,UAAWtQ,EAAQwK,EAAMrK,GAGpE,SAAAiU,EAAwB9Q,EAAWwJ,EAAM9M,EAAQG,EAASqK,GACxD,OAAOmI,EAAAA,KAAK+D,EAAc7U,KAAnB8Q,CAAyBrP,EAAWwJ,EAAM9M,EAAQwK,EAAMrK,GAGjE,SAAAyS,EAAsC1L,EAAM5D,EAAWwJ,EAAMmK,EAAe/Q,EAAgBgR,GAC1F,IAAIC,EAEFA,EADgB,YAAd7T,EACeqP,EAAAA,KAAK+B,EAAe7S,KAAMiL,GAE1B6F,EAAAA,KAAKyB,EAAgBvS,KAAMyB,EAAWwJ,GAGzD,IAAIsK,EAAkB,SAAUpX,EAAQG,EAASqK,GAC/C,IAAI0F,EAAajL,EAAAA,UACfjF,OAAQA,EACRG,QAASA,EACTqK,KAAMA,IAENxK,OAAQiX,EACR9W,QAAS+F,EACTsE,KAAM0M,IAER,OAAOC,EAAejH,EAAWlQ,OAAQkQ,EAAW/P,QAAS+P,EAAW1F,OAGtElL,EAAO+D,OAAOC,GAChBzB,KAAKqF,GAAQkQ,EAEbvV,KAAKqF,GAAQ,SAAUsD,EAAMxK,EAAQG,GACnC,OAAOiX,EAAgBpX,EAAQG,EAASqK,IAgC9CvH,EAAsBsP,EAASjT,GAE/BiT,EAAQ8E,KAAO1E,EAAAA,KAAKE,EAA4BN,GAEhDA,EAAQA,QAAUI,EAAAA,KAxBlB,SAAmBnL,EAAOkL,GACxB,IAAI4E,EAAyB3S,EAAAA,OAAOrF,EAAOgI,mBACvCiQ,KACAhE,GAAcb,GAAUH,GAAS5J,IAAInB,GAQzC,IAAK,IAAIqD,KAPT0M,EAAKxQ,IAAM4L,EAAAA,KAAK5L,EAAM2L,GAAUH,EAAUG,EAAQlL,GAClD+P,EAAK5O,IAAMgK,EAAAA,KAAKY,EAAW5K,IAAK4K,GAChCgE,EAAKhS,KAAOoN,EAAAA,KAAKY,EAAWhO,KAAMgO,GAClCgE,EAAKzP,QAAU6K,EAAAA,KAAKY,EAAWzL,QAASyL,GACxCgE,EAAKzN,eAAiB6I,EAAAA,KAAKY,EAAWzJ,eAAgByJ,GACtDgE,EAAKjS,IAAMqN,EAAAA,KAAKY,EAAWjO,IAAKiO,GAEfA,EACXA,EAAW7B,eAAe7G,IAAS2M,EAAAA,WAAWjE,EAAW1I,MAAWtH,EAAAA,SAAS+T,EAAwBzM,KACvG0M,EAAK1M,GAAQ8H,EAAAA,KAAKY,EAAW1I,GAAO0I,IAIxC,OAAOgE,GAOyBhF,GAElCA,EAAQ1I,WAAa8I,EAAAA,KAjCrB,SAAmCxC,GACjC,IAAIsH,EAAYlP,EAAAA,MAAM2L,EAAAA,KAAK5U,EAAQ,kBAGnC,OAFA2D,EAAsBwU,EAAWA,GACjCtH,EAAWsH,GACJnF,EAA8BmF,IA6BclF,GAErDA,EAAQxL,IAAM4L,EAAAA,KAAK5L,EAAKwL,EAAS,MAEjCA,EAAQ5J,IAAMgK,EAAAA,KAAKhK,EAAK4J,EAAS,MAEjCA,EAAQ3J,QAAU+J,EAAAA,KAAK/J,EAAS2J,EAAS,MAEzCA,EAAQ1J,OAAS8J,EAAAA,KAAK9J,EAAQ0J,EAAS,MAEvCA,EAAQzJ,OAAS6J,EAAAA,KAAK7J,EAAQyJ,EAAS,MAEvCA,EAAQO,iBAAmBH,EAAAA,KAAKG,EAAkBP,GAElDA,EAAQmF,sBAAwB/E,EAAAA,KAAKU,EAAoBd,GAEzDA,EAAQe,yBAA2BX,EAAAA,KA5WnC,SAA6CD,EAAQ7F,EAASrF,GAC5D,IAAI+L,EAAaD,EAAyBZ,EAAQ7F,EAASrF,GAAO,GAMlE,OALAxB,EAAAA,KAAKuN,EAAY,SAAU/I,GACrBA,GACF6I,EAAmBX,EAAQlI,EAAMhD,GAAO,KAGrC+L,GAqWoEhB,GAE7E,OAAOA,EAGFD,CAA8BF,IA3lBrB,CAAmBxQ,GACnC,IAAIiL,EAAUhL,KAAKsQ,SAASE,OAC5BtR,EAAAA,OAAOc,KAAMgL,GAEbhL,KAAK8V,0BAGP3I,EAAAlN,UAAA6V,iBAAA,WAAA,IAAA5V,EAAAF,KACE,GAAKA,KAAKtC,WAAciY,EAAAA,WAAW3V,KAAKtC,UAAUC,IAAlD,CAIA,MAAIoY,EAAQvV,EAAAA,IAAIR,KAAKtC,UAAUE,YAAa,SAACoY,GAC3C,OAAO9V,EAAKmQ,SAAS5M,IAAIuS,MAG3BC,EAAAjW,KAAKtC,WAAUC,GAAEuY,MAAAD,EAAAnM,EAAAC,UAAK/J,KAAKsQ,UAAayF,0BA1H3C7U,EAAAA,kFAsGIiV,EAAAA,WAAQ3J,KAAI4J,EAAAA,OAAMC,MAAC/Y,YAtIKgZ,EAAAA,gBA6BpBxW,UC5BT,IAMayW,EAAa,IAAIhZ,EAAAA,eAAuB,0BAQnD,SAAAiZ,EAAoCC,GAClC,GAAIA,EACF,MAAM,IAAIjR,MACR,+EAICgR,EAAAE,QAAP,SAAeC,EAAUC,GACvB,OACEC,SAAUL,EACVM,YACGC,QAASR,EAAYS,UAAWL,EAAQC,KACxCG,QAASzZ,EAAa2Z,WAAYzZ,EAAoB0Z,MAAOX,2BAlBrEY,EAAAA,SAAQd,OACPe,SAAUC,EAAAA,kBACVP,WAAYhX,EAAiBqN,gDAElBqJ,EAAiBc,aAAA9K,KAEf2J,EAAAA,WAAQ3J,KAAI+K,EAAAA","sourcesContent":["import {InjectionToken} from '@angular/core';\nimport { isArray } from 'lodash';\n\n\nexport const RESTANGULAR = new InjectionToken<string>('restangularWithConfig');\nexport function RestangularFactory(config) {\n  let configObj = {\n    fn: config[0],\n    arrServices: [],\n  };\n\n  if (isArray(config[0])) {\n    configObj = {\n      arrServices: config[0],\n      fn: config[1]\n    };\n  }\n  return configObj;\n}\n","import {HttpRequest, HttpHeaders, HttpParams} from '@angular/common/http';\n\nimport {assign} from 'core-js/fn/object';\n\nexport class RestangularHelper {\n\n  static createRequest(options) {\n    let requestQueryParams = RestangularHelper.createRequestQueryParams(options.params);\n    let requestHeaders = RestangularHelper.createRequestHeaders(options.headers);\n    let methodName = options.method.toUpperCase();\n    let withCredentials = options.withCredentials || false;\n\n    let request = new HttpRequest(\n      methodName,\n      options.url,\n      options.data,\n      {\n        headers: requestHeaders,\n        params: requestQueryParams,\n        responseType: options.responseType,\n        withCredentials\n      }\n    );\n\n    if(['GET', 'DELETE', 'HEAD', 'JSONP', 'OPTIONS'].indexOf(methodName) >= 0) {\n      request = new HttpRequest(\n        methodName,\n        options.url,\n        {\n          headers: requestHeaders,\n          params: requestQueryParams,\n          responseType: options.responseType,\n          withCredentials\n        }\n      )\n    }\n    return request;\n  }\n\n  static createRequestQueryParams(queryParams) {\n    let requestQueryParams = assign({}, queryParams);\n    let search: HttpParams = new HttpParams();\n\n    for (let key in requestQueryParams) {\n      let value: any = requestQueryParams[key];\n\n      if (Array.isArray(value)) {\n        value.forEach(function(val){\n          search = search.append(key, val);\n        });\n      } else {\n        if (typeof value === 'object') {\n          value = JSON.stringify(value);\n        }\n        search = search.append(key, value);\n      }\n\n    }\n\n    return search;\n  }\n\n  static createRequestHeaders(headers) {\n    for (let key in headers) {\n      let value: any = headers[key];\n      if (typeof value === 'undefined') {\n        delete headers[key];\n      }\n    }\n\n    return new HttpHeaders(assign({}, headers));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpBackend, HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { throwError, Observable } from 'rxjs';\n\nimport { RestangularHelper } from './ngx-restangular-helper';\nimport { catchError, filter, map } from 'rxjs/operators';\nimport {HttpEvent} from '@angular/common/http/src/response';\n\n@Injectable()\nexport class RestangularHttp {\n\n  constructor(public http: HttpBackend) {\n  }\n\n  createRequest(options): Observable<HttpEvent<any>> {\n    const request = RestangularHelper.createRequest(options);\n\n    return this.request(request);\n  }\n\n  request(request: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.http.handle(request)\n    .pipe(\n      filter(event => event instanceof HttpResponse),\n      map((response: any) => {\n        if (!response.ok) {\n          return throwError(new HttpErrorResponse(response));\n        }\n        return response;\n      }),\n      map(response => {\n        response.config = {params: request};\n        return response;\n      }),\n      catchError(err => {\n        err.request = request;\n        err.data = err.error;\n        err.repeatRequest = (newRequest?) => {\n          return this.request(newRequest || request);\n        };\n\n        return throwError(err);\n      })\n    );\n  }\n}\n\n","import {\n  includes,\n  isUndefined,\n  isNull,\n  isArray,\n  isObject,\n  isBoolean,\n  defaults,\n  each,\n  extend,\n  find,\n  has,\n  initial,\n  last,\n  clone,\n  reduce,\n  keys,\n  isEmpty,\n  forEach,\n} from 'lodash';\n\nexport function RestangularConfigurer(object, config){\n  object.configuration = config;\n\n  /**\n   * Those are HTTP safe methods for which there is no need to pass any data with the request.\n   */\n  var safeMethods = ['get', 'head', 'options', 'trace', 'getlist'];\n  config.isSafe = function (operation) {\n    return includes(safeMethods, operation.toLowerCase());\n  };\n\n  var absolutePattern = /^https?:\\/\\//i;\n  config.isAbsoluteUrl = function (string) {\n    return isUndefined(config.absoluteUrl) || isNull(config.absoluteUrl) ?\n    string && absolutePattern.test(string) :\n      config.absoluteUrl;\n  };\n\n  config.absoluteUrl = isUndefined(config.absoluteUrl) ? true : config.absoluteUrl;\n  object.setSelfLinkAbsoluteUrl = function (value) {\n    config.absoluteUrl = value;\n  };\n  /**\n   * This is the BaseURL to be used with Restangular\n   */\n  config.baseUrl = isUndefined(config.baseUrl) ? '' : config.baseUrl;\n  object.setBaseUrl = function (newBaseUrl) {\n    config.baseUrl = /\\/$/.test(newBaseUrl) ?\n      newBaseUrl.substring(0, newBaseUrl.length - 1) :\n      newBaseUrl;\n    return this;\n  };\n\n  /**\n   * Sets the extra fields to keep from the parents\n   */\n  config.extraFields = config.extraFields || [];\n  object.setExtraFields = function (newExtraFields) {\n    config.extraFields = newExtraFields;\n    return this;\n  };\n\n  /**\n   * Some default $http parameter to be used in EVERY call\n   **/\n  config.defaultHttpFields = config.defaultHttpFields || {};\n  object.setDefaultHttpFields = function (values) {\n    config.defaultHttpFields = values;\n    return this;\n  };\n\n  /**\n   * Always return plain data, no restangularized object\n   **/\n  config.plainByDefault = config.plainByDefault || false;\n  object.setPlainByDefault = function (value) {\n    config.plainByDefault = value === true ? true : false;\n    return this;\n  }\n\n  config.withHttpValues = function (httpLocalConfig, obj) {\n    return defaults(obj, httpLocalConfig, config.defaultHttpFields);\n  };\n\n  config.encodeIds = isUndefined(config.encodeIds) ? true : config.encodeIds;\n  object.setEncodeIds = function (encode) {\n    config.encodeIds = encode;\n  };\n\n  config.defaultRequestParams = config.defaultRequestParams || {\n      get: {},\n      post: {},\n      put: {},\n      remove: {},\n      common: {}\n    };\n\n  object.setDefaultRequestParams = function (param1, param2) {\n    var methods = [],\n      params = param2 || param1;\n    if (!isUndefined(param2)) {\n      if (isArray(param1)) {\n        methods = param1;\n      } else {\n        methods.push(param1);\n      }\n    } else {\n      methods.push('common');\n    }\n\n    each(methods, function (method) {\n      config.defaultRequestParams[method] = params;\n    });\n    return this;\n  };\n\n  object.requestParams = config.defaultRequestParams;\n\n  config.defaultHeaders = config.defaultHeaders || {};\n  object.setDefaultHeaders = function (headers) {\n    config.defaultHeaders = headers;\n    object.defaultHeaders = config.defaultHeaders;\n    return this;\n  };\n\n  object.defaultHeaders = config.defaultHeaders;\n\n\n  /**\n   * Method overriders response Method\n   **/\n  config.defaultResponseMethod = config.defaultResponseMethod || 'promise';\n  object.setDefaultResponseMethod = function (method) {\n    config.defaultResponseMethod = method;\n    object.defaultResponseMethod = config.defaultResponseMethod;\n    return this;\n  };\n  object.defaultResponseMethod = config.defaultResponseMethod;\n\n  /**\n   * Method overriders will set which methods are sent via POST with an X-HTTP-Method-Override\n   **/\n  config.methodOverriders = config.methodOverriders || [];\n  object.setMethodOverriders = function (values) {\n    var overriders = extend([], values);\n    if (config.isOverridenMethod('delete', overriders)) {\n      overriders.push('remove');\n    }\n    config.methodOverriders = overriders;\n    return this;\n  };\n\n  config.jsonp = isUndefined(config.jsonp) ? false : config.jsonp;\n  object.setJsonp = function (active) {\n    config.jsonp = active;\n  };\n\n  config.isOverridenMethod = function (method, values) {\n    var search = values || config.methodOverriders;\n    return !isUndefined(find(search, function (one: string) {\n      return one.toLowerCase() === method.toLowerCase();\n    }));\n  };\n\n  /**\n   * Sets the URL creator type. For now, only Path is created. In the future we'll have queryParams\n   **/\n  config.urlCreator = config.urlCreator || 'path';\n  object.setUrlCreator = function (name) {\n    if (!has(config.urlCreatorFactory, name)) {\n      throw new Error('URL Path selected isn\\'t valid');\n    }\n\n    config.urlCreator = name;\n    return this;\n  };\n\n  /**\n   * You can set the restangular fields here. The 3 required fields for Restangular are:\n   *\n   * id: Id of the element\n   * route: name of the route of this element\n   * parentResource: the reference to the parent resource\n   *\n   *  All of this fields except for id, are handled (and created) by Restangular. By default,\n   *  the field values will be id, route and parentResource respectively\n   */\n  config.restangularFields = config.restangularFields || {\n      id: 'id',\n      route: 'route',\n      parentResource: 'parentResource',\n      restangularCollection: 'restangularCollection',\n      cannonicalId: '__cannonicalId',\n      etag: 'restangularEtag',\n      selfLink: 'href',\n      get: 'get',\n      getList: 'getList',\n      put: 'put',\n      post: 'post',\n      remove: 'remove',\n      head: 'head',\n      trace: 'trace',\n      options: 'options',\n      patch: 'patch',\n      getRestangularUrl: 'getRestangularUrl',\n      getRequestedUrl: 'getRequestedUrl',\n      putElement: 'putElement',\n      addRestangularMethod: 'addRestangularMethod',\n      getParentList: 'getParentList',\n      clone: 'clone',\n      ids: 'ids',\n      httpConfig: '_$httpConfig',\n      reqParams: 'reqParams',\n      one: 'one',\n      all: 'all',\n      several: 'several',\n      oneUrl: 'oneUrl',\n      allUrl: 'allUrl',\n      customPUT: 'customPUT',\n      customPATCH: 'customPATCH',\n      customPOST: 'customPOST',\n      customDELETE: 'customDELETE',\n      customGET: 'customGET',\n      customGETLIST: 'customGETLIST',\n      customOperation: 'customOperation',\n      doPUT: 'doPUT',\n      doPATCH: 'doPATCH',\n      doPOST: 'doPOST',\n      doDELETE: 'doDELETE',\n      doGET: 'doGET',\n      doGETLIST: 'doGETLIST',\n      fromServer: 'fromServer',\n      withConfig: 'withConfig',\n      withHttpConfig: 'withHttpConfig',\n      singleOne: 'singleOne',\n      plain: 'plain',\n      save: 'save',\n      restangularized: 'restangularized'\n    };\n  object.setRestangularFields = function (resFields) {\n    config.restangularFields =\n      extend({}, config.restangularFields, resFields);\n    return this;\n  };\n\n  config.isRestangularized = function (obj) {\n    return !!obj[config.restangularFields.restangularized];\n  };\n\n  config.setFieldToElem = function (field, elem, value) {\n    var properties = field.split('.');\n    var idValue = elem;\n    each(initial(properties), function (prop: any) {\n      idValue[prop] = {};\n      idValue = idValue[prop];\n    });\n    var index: any = last(properties);\n    idValue[index] = value;\n    return this;\n  };\n\n  config.getFieldFromElem = function (field, elem) {\n    var properties = field.split('.');\n    var idValue: any = elem;\n    each(properties, function (prop) {\n      if (idValue) {\n        idValue = idValue[prop];\n      }\n    });\n    return clone(idValue);\n  };\n\n  config.setIdToElem = function (elem, id /*, route */) {\n    config.setFieldToElem(config.restangularFields.id, elem, id);\n    return this;\n  };\n\n  config.getIdFromElem = function (elem) {\n    return config.getFieldFromElem(config.restangularFields.id, elem);\n  };\n\n  config.isValidId = function (elemId) {\n    return '' !== elemId && !isUndefined(elemId) && !isNull(elemId);\n  };\n\n  config.setUrlToElem = function (elem, url /*, route */) {\n    config.setFieldToElem(config.restangularFields.selfLink, elem, url);\n    return this;\n  };\n\n  config.getUrlFromElem = function (elem) {\n    return config.getFieldFromElem(config.restangularFields.selfLink, elem);\n  };\n\n  config.useCannonicalId = isUndefined(config.useCannonicalId) ? false : config.useCannonicalId;\n  object.setUseCannonicalId = function (value) {\n    config.useCannonicalId = value;\n    return this;\n  };\n\n  config.getCannonicalIdFromElem = function (elem) {\n    var cannonicalId = elem[config.restangularFields.cannonicalId];\n    var actualId = config.isValidId(cannonicalId) ? cannonicalId : config.getIdFromElem(elem);\n    return actualId;\n  };\n\n  /**\n   * Sets the Response parser. This is used in case your response isn't directly the data.\n   * For example if you have a response like {meta: {'meta'}, data: {name: 'Gonto'}}\n   * you can extract this data which is the one that needs wrapping\n   *\n   * The ResponseExtractor is a function that receives the response and the method executed.\n   */\n\n  config.responseInterceptors = config.responseInterceptors ? [...config.responseInterceptors] : [];\n\n  config.defaultResponseInterceptor = function (data /*, operation, what, url, response, subject */) {\n    return data || {};\n  };\n\n  config.responseExtractor = function (data, operation, what, url, response, subject) {\n    var interceptors = clone(config.responseInterceptors);\n    interceptors.push(config.defaultResponseInterceptor);\n    var theData = data;\n    each(interceptors, function (interceptor: any) {\n      theData = interceptor(theData, operation,\n        what, url, response, subject);\n    });\n    return theData;\n  };\n\n  object.addResponseInterceptor = function (extractor) {\n    config.responseInterceptors.push(extractor);\n    return this;\n  };\n\n  config.errorInterceptors = config.errorInterceptors ? [...config.errorInterceptors] : [];\n  object.addErrorInterceptor = function (interceptor) {\n    config.errorInterceptors = [interceptor, ...config.errorInterceptors];\n    return this;\n  };\n\n  object.setResponseInterceptor = object.addResponseInterceptor;\n  object.setResponseExtractor = object.addResponseInterceptor;\n  object.setErrorInterceptor = object.addErrorInterceptor;\n\n  /**\n   * Response interceptor is called just before resolving promises.\n   */\n\n\n  /**\n   * Request interceptor is called before sending an object to the server.\n   */\n  config.requestInterceptors = config.requestInterceptors ? [...config.requestInterceptors] : [];\n\n  config.defaultInterceptor = function (element, operation, path, url, headers, params, httpConfig) {\n    return {\n      element: element,\n      headers: headers,\n      params: params,\n      httpConfig: httpConfig\n    };\n  };\n\n  config.fullRequestInterceptor = function (element, operation, path, url, headers, params, httpConfig) {\n    var interceptors = clone(config.requestInterceptors);\n    var defaultRequest = config.defaultInterceptor(element, operation, path, url, headers, params, httpConfig);\n    return reduce(interceptors, function (request: any, interceptor: any) {\n\n      let returnInterceptor: any = interceptor(request.element, operation, path, url, request.headers, request.params, request.httpConfig);\n      return extend(request, returnInterceptor);\n    }, defaultRequest);\n  };\n\n  object.addRequestInterceptor = function (interceptor) {\n    config.requestInterceptors.push(function (elem, operation, path, url, headers, params, httpConfig) {\n      return {\n        headers: headers,\n        params: params,\n        element: interceptor(elem, operation, path, url),\n        httpConfig: httpConfig\n      };\n    });\n    return this;\n  };\n\n  object.setRequestInterceptor = object.addRequestInterceptor;\n\n  object.addFullRequestInterceptor = function (interceptor) {\n    config.requestInterceptors.push(interceptor);\n    return this;\n  };\n\n  object.setFullRequestInterceptor = object.addFullRequestInterceptor;\n\n  config.onBeforeElemRestangularized = config.onBeforeElemRestangularized || function (elem) {\n      return elem;\n    };\n  object.setOnBeforeElemRestangularized = function (post) {\n    config.onBeforeElemRestangularized = post;\n    return this;\n  };\n\n  object.setRestangularizePromiseInterceptor = function (interceptor) {\n    config.restangularizePromiseInterceptor = interceptor;\n    return this;\n  };\n\n  /**\n   * This method is called after an element has been \"Restangularized\".\n   *\n   * It receives the element, a boolean indicating if it's an element or a collection\n   * and the name of the model\n   *\n   */\n  config.onElemRestangularized = config.onElemRestangularized || function (elem) {\n      return elem;\n    };\n  object.setOnElemRestangularized = function (post) {\n    config.onElemRestangularized = post;\n    return this;\n  };\n\n  config.shouldSaveParent = config.shouldSaveParent || function () {\n      return true;\n    };\n  object.setParentless = function (values) {\n    if (isArray(values)) {\n      config.shouldSaveParent = function (route) {\n        return !includes(values, route);\n      };\n    } else if (isBoolean(values)) {\n      config.shouldSaveParent = function () {\n        return !values;\n      };\n    }\n    return this;\n  };\n\n  /**\n   * This lets you set a suffix to every request.\n   *\n   * For example, if your api requires that for JSon requests you do /users/123.json, you can set that\n   * in here.\n   *\n   *\n   * By default, the suffix is null\n   */\n  config.suffix = isUndefined(config.suffix) ? null : config.suffix;\n  object.setRequestSuffix = function (newSuffix) {\n    config.suffix = newSuffix;\n    return this;\n  };\n\n  /**\n   * Add element transformers for certain routes.\n   */\n  config.transformers = config.transformers || {};\n  object.addElementTransformer = function (type, secondArg, thirdArg) {\n    var isCollection = null;\n    var transformer = null;\n    if (arguments.length === 2) {\n      transformer = secondArg;\n    } else {\n      transformer = thirdArg;\n      isCollection = secondArg;\n    }\n\n    var typeTransformers = config.transformers[type];\n    if (!typeTransformers) {\n      typeTransformers = config.transformers[type] = [];\n    }\n\n    typeTransformers.push(function (coll, elem) {\n      if (isNull(isCollection) || (coll === isCollection)) {\n        return transformer(elem);\n      }\n      return elem;\n    });\n\n    return object;\n  };\n\n  object.extendCollection = function (route, fn) {\n    return object.addElementTransformer(route, true, fn);\n  };\n\n  object.extendModel = function (route, fn) {\n    return object.addElementTransformer(route, false, fn);\n  };\n\n  config.transformElem = function (elem, isCollection, route, Restangular, force) {\n    if (!force && !config.transformLocalElements && !elem[config.restangularFields.fromServer]) {\n      return elem;\n    }\n    var typeTransformers = config.transformers[route];\n    var changedElem = elem;\n    if (typeTransformers) {\n      each(typeTransformers, function (transformer: (isCollection: boolean, changedElem: any) => any) {\n        changedElem = transformer(isCollection, changedElem);\n      });\n    }\n    return config.onElemRestangularized(changedElem, isCollection, route, Restangular);\n  };\n\n  config.transformLocalElements = isUndefined(config.transformLocalElements) ?\n    false :\n    config.transformLocalElements;\n\n  object.setTransformOnlyServerElements = function (active) {\n    config.transformLocalElements = !active;\n  };\n\n  config.fullResponse = isUndefined(config.fullResponse) ? false : config.fullResponse;\n  object.setFullResponse = function (full) {\n    config.fullResponse = full;\n    return this;\n  };\n\n\n  //Internal values and functions\n  config.urlCreatorFactory = {};\n\n  /**\n   * Base URL Creator. Base prototype for everything related to it\n   **/\n\n  var BaseCreator = function () {\n  };\n\n  BaseCreator.prototype.setConfig = function (config) {\n    this.config = config;\n    return this;\n  };\n\n  BaseCreator.prototype.parentsArray = function (current) {\n    var parents = [];\n    while (current) {\n      parents.push(current);\n      current = current[this.config.restangularFields.parentResource];\n    }\n    return parents.reverse();\n  };\n\n  function RestangularResource(config, $http, url, configurer) {\n    var resource = {};\n    each(keys(configurer), function (key) {\n      var value = configurer[key];\n\n      // Add default parameters\n      value.params = extend({}, value.params, config.defaultRequestParams[value.method.toLowerCase()]);\n      // We don't want the ? if no params are there\n      if (isEmpty(value.params)) {\n        delete value.params;\n      }\n\n      if (config.isSafe(value.method)) {\n\n        resource[key] = function () {\n          let config = extend(value, {\n            url: url\n          });\n          return $http.createRequest(config);\n        };\n\n      } else {\n\n        resource[key] = function (data) {\n          let config = extend(value, {\n            url: url,\n            data: data\n          });\n          return $http.createRequest(config);\n        };\n\n      }\n    });\n\n    return resource;\n  }\n\n  BaseCreator.prototype.resource = function (current, $http, localHttpConfig, callHeaders, callParams, what, etag, operation) {\n    var params = defaults(callParams || {}, this.config.defaultRequestParams.common);\n    var headers = defaults(callHeaders || {}, this.config.defaultHeaders);\n\n    if (etag) {\n      if (!config.isSafe(operation)) {\n        headers['If-Match'] = etag;\n      } else {\n        headers['If-None-Match'] = etag;\n      }\n    }\n\n    var url = this.base(current);\n\n    if (what) {\n      var add = '';\n      if (!/\\/$/.test(url)) {\n        add += '/';\n      }\n      add += what;\n      url += add;\n    }\n\n    if (this.config.suffix &&\n      url.indexOf(this.config.suffix, url.length - this.config.suffix.length) === -1 && !this.config.getUrlFromElem(current)) {\n      url += this.config.suffix;\n    }\n\n    current[this.config.restangularFields.httpConfig] = undefined;\n\n    return RestangularResource(this.config, $http, url, {\n      getList: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'GET',\n          params: params,\n          headers: headers\n        }),\n\n      get: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'GET',\n          params: params,\n          headers: headers\n        }),\n\n      jsonp: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'jsonp',\n          params: params,\n          headers: headers\n        }),\n\n      put: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'PUT',\n          params: params,\n          headers: headers\n        }),\n\n      post: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'POST',\n          params: params,\n          headers: headers\n        }),\n\n      remove: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'DELETE',\n          params: params,\n          headers: headers\n        }),\n\n      head: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'HEAD',\n          params: params,\n          headers: headers\n        }),\n\n      trace: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'TRACE',\n          params: params,\n          headers: headers\n        }),\n\n      options: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'OPTIONS',\n          params: params,\n          headers: headers\n        }),\n\n      patch: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'PATCH',\n          params: params,\n          headers: headers\n        })\n    });\n  };\n\n  /**\n   * This is the Path URL creator. It uses Path to show Hierarchy in the Rest API.\n   * This means that if you have an Account that then has a set of Buildings, a URL to a building\n   * would be /accounts/123/buildings/456\n   **/\n  var Path = function () {\n  };\n\n  Path.prototype = new BaseCreator();\n\n  Path.prototype.normalizeUrl = function (url) {\n    var parts = /((?:http[s]?:)?\\/\\/)?(.*)?/.exec(url);\n    parts[2] = parts[2].replace(/[\\\\\\/]+/g, '/');\n    return (typeof parts[1] !== 'undefined') ? parts[1] + parts[2] : parts[2];\n  };\n\n  Path.prototype.base = function (current) {\n    var __this = this;\n    return reduce(this.parentsArray(current), function (acum: any, elem: any) {\n      var elemUrl;\n      var elemSelfLink = __this.config.getUrlFromElem(elem);\n      if (elemSelfLink) {\n        if (__this.config.isAbsoluteUrl(elemSelfLink)) {\n          return elemSelfLink;\n        } else {\n          elemUrl = elemSelfLink;\n        }\n      } else {\n        elemUrl = elem[__this.config.restangularFields.route];\n\n        if (elem[__this.config.restangularFields.restangularCollection]) {\n          var ids = elem[__this.config.restangularFields.ids];\n          if (ids) {\n            elemUrl += '/' + ids.join(',');\n          }\n        } else {\n          var elemId: any;\n          if (__this.config.useCannonicalId) {\n            elemId = __this.config.getCannonicalIdFromElem(elem);\n          } else {\n            elemId = __this.config.getIdFromElem(elem);\n          }\n\n          if (config.isValidId(elemId) && !elem.singleOne) {\n            elemUrl += '/' + (__this.config.encodeIds ? encodeURIComponent(elemId) : elemId);\n          }\n        }\n      }\n      acum = acum.replace(/\\/$/, '') + '/' + elemUrl;\n      return __this.normalizeUrl(acum);\n\n    }, this.config.baseUrl);\n  };\n\n\n  Path.prototype.fetchUrl = function (current, what) {\n    var baseUrl = this.base(current);\n    if (what) {\n      baseUrl += '/' + what;\n    }\n    return baseUrl;\n  };\n\n  Path.prototype.fetchRequestedUrl = function (current, what) {\n    var url = this.fetchUrl(current, what);\n    var params = current[config.restangularFields.reqParams];\n\n    // From here on and until the end of fetchRequestedUrl,\n    // the code has been kindly borrowed from angular.js\n    // The reason for such code bloating is coherence:\n    //   If the user were to use this for cache management, the\n    //   serialization of parameters would need to be identical\n    //   to the one done by angular for cache keys to match.\n    function sortedKeys(obj) {\n      var keys = [];\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      return keys.sort();\n    }\n\n    function forEachSorted(obj, iterator?, context?) {\n      var keys = sortedKeys(obj);\n      for (var i = 0; i < keys.length; i++) {\n        iterator.call(context, obj[keys[i]], keys[i]);\n      }\n      return keys;\n    }\n\n    function encodeUriQuery(val, pctEncodeSpaces?) {\n      return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    }\n\n    if (!params) {\n      return url + (this.config.suffix || '');\n    }\n\n    var parts = [];\n    forEachSorted(params, function (value, key) {\n      if (value === null || value === undefined) {\n        return;\n      }\n      if (!isArray(value)) {\n        value = [value];\n      }\n\n      forEach(value, function (v) {\n        if (isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encodeUriQuery(key) + '=' + encodeUriQuery(v));\n      });\n    });\n\n    return url + (this.config.suffix || '') + ((url.indexOf('?') === -1) ? '?' : '&') + parts.join('&');\n  };\n\n  config.urlCreatorFactory.path = Path;\n}\n","import { Injectable, Inject, Injector, Optional } from '@angular/core';\nimport { assign } from 'core-js/fn/object';\nimport {\n  map,\n  bind,\n  union,\n  values,\n  pick,\n  isEmpty,\n  isFunction,\n  isNumber,\n  isUndefined,\n  isArray,\n  isObject,\n  extend,\n  each,\n  every,\n  omit,\n  get,\n  defaults,\n  clone,\n  cloneDeep,\n  includes\n} from 'lodash';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { RESTANGULAR } from './ngx-restangular.config';\nimport { RestangularHttp } from './ngx-restangular-http';\nimport { RestangularConfigurer } from './ngx-restangular-config.factory';\n\n@Injectable()\nexport class Restangular {\n  provider: {\n    setBaseUrl: any,\n    setDefaultHeaders: any,\n    configuration: any,\n    setSelfLinkAbsoluteUrl: any,\n    setExtraFields: any,\n    setDefaultHttpFields: any,\n    setPlainByDefault: any,\n    setEncodeIds: any,\n    setDefaultRequestParams: any,\n    requestParams: any,\n    defaultHeaders: any,\n    setDefaultResponseMethod: any,\n    defaultResponseMethod: any,\n    setMethodOverriders: any,\n    setJsonp: any,\n    setUrlCreator: any,\n    setRestangularFields: any,\n    setUseCannonicalId: any,\n    addResponseInterceptor: any,\n    addErrorInterceptor: any,\n    setResponseInterceptor: any,\n    setResponseExtractor: any,\n    setErrorInterceptor: any,\n    addRequestInterceptor: any,\n    setRequestInterceptor: any,\n    setFullRequestInterceptor: any,\n    addFullRequestInterceptor: any,\n    setOnBeforeElemRestangularized: any,\n    setRestangularizePromiseInterceptor: any,\n    setOnElemRestangularized: any,\n    setParentless: any,\n    setRequestSuffix: any,\n    addElementTransformer: any,\n    extendCollection: any,\n    extendModel: any,\n    setTransformOnlyServerElements: any,\n    setFullResponse: any,\n    $get: any\n  };\n  addElementTransformer: any;\n  extendCollection: any;\n  extendModel: any;\n  copy;\n  configuration;\n  service;\n  id;\n  route;\n  parentResource;\n  restangularCollection;\n  cannonicalId;\n  etag;\n  selfLink;\n  get;\n  getList;\n  put;\n  post;\n  remove;\n  head;\n  trace;\n  options;\n  patch;\n  getRestangularUrl;\n  getRequestedUrl;\n  putElement;\n  addRestangularMethod;\n  getParentList;\n  clone;\n  ids;\n  httpConfig;\n  reqParams;\n  one;\n  all;\n  several;\n  oneUrl;\n  allUrl;\n  customPUT;\n  customPATCH;\n  customPOST;\n  customDELETE;\n  customGET;\n  customGETLIST;\n  customOperation;\n  doPUT;\n  doPATCH;\n  doPOST;\n  doDELETE;\n  doGET;\n  doGETLIST;\n  fromServer;\n  withConfig;\n  withHttpConfig;\n  singleOne;\n  plain;\n  save;\n  restangularized;\n  restangularizeElement;\n  restangularizeCollection;\n\n  constructor(\n    @Optional() @Inject(RESTANGULAR) public configObj,\n    private injector: Injector,\n    private http: RestangularHttp\n  ) {\n    this.provider = new providerConfig(http);\n    let element = this.provider.$get();\n    assign(this, element);\n\n    this.setDefaultConfig();\n  }\n\n  setDefaultConfig() {\n    if (!this.configObj || !isFunction(this.configObj.fn)) {\n      return;\n    }\n\n    let arrDI = map(this.configObj.arrServices, (services) => {\n      return this.injector.get(services);\n    });\n\n    this.configObj.fn(...[this.provider, ...arrDI]);\n  }\n}\n\nfunction providerConfig($http) {\n  var globalConfiguration = {};\n\n  RestangularConfigurer(this, globalConfiguration);\n\n  this.$get = $get\n\n  function $get() {\n\n    function createServiceForConfiguration(config) {\n      var service: any = {};\n\n      var urlHandler = new config.urlCreatorFactory[config.urlCreator]();\n      urlHandler.setConfig(config);\n\n      function restangularizeBase(parent, elem, route, reqParams, fromServer) {\n        elem[config.restangularFields.route] = route;\n        elem[config.restangularFields.getRestangularUrl] = bind(urlHandler.fetchUrl, urlHandler, elem);\n        elem[config.restangularFields.getRequestedUrl] = bind(urlHandler.fetchRequestedUrl, urlHandler, elem);\n        elem[config.restangularFields.addRestangularMethod] = bind(addRestangularMethodFunction, elem);\n        elem[config.restangularFields.clone] = bind(copyRestangularizedElement, elem);\n        elem[config.restangularFields.reqParams] = isEmpty(reqParams) ? null : reqParams;\n        elem[config.restangularFields.withHttpConfig] = bind(withHttpConfig, elem);\n        elem[config.restangularFields.plain] = bind(stripRestangular, elem, elem);\n\n        // Tag element as restangularized\n        elem[config.restangularFields.restangularized] = true;\n\n        // RequestLess connection\n        elem[config.restangularFields.one] = bind(one, elem, elem);\n        elem[config.restangularFields.all] = bind(all, elem, elem);\n        elem[config.restangularFields.several] = bind(several, elem, elem);\n        elem[config.restangularFields.oneUrl] = bind(oneUrl, elem, elem);\n        elem[config.restangularFields.allUrl] = bind(allUrl, elem, elem);\n\n        elem[config.restangularFields.fromServer] = !!fromServer;\n\n        if (parent && config.shouldSaveParent(route)) {\n          var parentId = config.getIdFromElem(parent);\n          var parentUrl = config.getUrlFromElem(parent);\n\n          var restangularFieldsForParent = union(\n            values(pick(config.restangularFields, ['route', 'singleOne', 'parentResource'])),\n            config.extraFields\n          );\n          var parentResource = pick(parent, restangularFieldsForParent);\n\n          if (config.isValidId(parentId)) {\n            config.setIdToElem(parentResource, parentId, route);\n          }\n          if (config.isValidId(parentUrl)) {\n            config.setUrlToElem(parentResource, parentUrl, route);\n          }\n\n          elem[config.restangularFields.parentResource] = parentResource;\n        } else {\n          elem[config.restangularFields.parentResource] = null;\n        }\n        return elem;\n      }\n\n      function one(parent, route, id, singleOne) {\n        var error;\n        if (isNumber(route) || isNumber(parent)) {\n          error = 'You\\'re creating a Restangular entity with the number ';\n          error += 'instead of the route or the parent. For example, you can\\'t call .one(12).';\n          throw new Error(error);\n        }\n        if (isUndefined(route)) {\n          error = 'You\\'re creating a Restangular entity either without the path. ';\n          error += 'For example you can\\'t call .one(). Please check if your arguments are valid.';\n          throw new Error(error);\n        }\n        var elem = {};\n        config.setIdToElem(elem, id, route);\n        config.setFieldToElem(config.restangularFields.singleOne, elem, singleOne);\n        return restangularizeElem(parent, elem, route, false);\n      }\n\n      function all(parent, route) {\n        return restangularizeCollection(parent, [], route, false);\n      }\n\n      function several(parent, route /*, ids */) {\n        var collection = [];\n        collection[config.restangularFields.ids] = Array.prototype.splice.call(arguments, 2);\n        return restangularizeCollection(parent, collection, route, false);\n      }\n\n      function oneUrl(parent, route, url) {\n        if (!route) {\n          throw new Error('Route is mandatory when creating new Restangular objects.');\n        }\n        var elem = {};\n        config.setUrlToElem(elem, url, route);\n        return restangularizeElem(parent, elem, route, false);\n      }\n\n      function allUrl(parent, route, url) {\n        if (!route) {\n          throw new Error('Route is mandatory when creating new Restangular objects.');\n        }\n        var elem = {};\n        config.setUrlToElem(elem, url, route);\n        return restangularizeCollection(parent, elem, route, false);\n      }\n\n      // Promises\n      function restangularizeResponse(subject, isCollection, valueToFill) {\n        return subject.pipe(filter(res => !!res)).toPromise();\n      }\n\n      function resolvePromise(subject, response, data, filledValue) {\n        extend(filledValue, data);\n\n        // Trigger the full response interceptor.\n        if (config.fullResponse) {\n          subject.next(extend(response, {\n            data: data\n          }));\n        } else {\n          subject.next(data);\n        }\n\n        subject.complete();\n      }\n\n      // Elements\n      function stripRestangular(elem) {\n        if (isArray(elem)) {\n          var array = [];\n          each(elem, function (value) {\n            array.push(config.isRestangularized(value) ? stripRestangular(value) : value);\n          });\n          return array;\n        } else {\n          return omit(elem, values(omit(config.restangularFields, 'id')));\n        }\n      }\n\n      function addCustomOperation(elem) {\n        elem[config.restangularFields.customOperation] = bind(customFunction, elem);\n        var requestMethods = {get: customFunction, delete: customFunction};\n        each(['put', 'patch', 'post'], function (name) {\n          requestMethods[name] = function (operation, elem, path, params, headers) {\n            return bind(customFunction, this)(operation, path, params, headers, elem);\n          };\n        });\n        each(requestMethods, function (requestFunc, name) {\n          var callOperation = name === 'delete' ? 'remove' : name;\n          each(['do', 'custom'], function (alias) {\n            elem[alias + name.toUpperCase()] = bind(requestFunc, elem, callOperation);\n          });\n        });\n        elem[config.restangularFields.customGETLIST] = bind(fetchFunction, elem);\n        elem[config.restangularFields.doGETLIST] = elem[config.restangularFields.customGETLIST];\n      }\n\n      function copyRestangularizedElement(element) {\n        var copiedElement = cloneDeep(element);\n        return restangularizeElem(copiedElement[config.restangularFields.parentResource],\n          copiedElement, copiedElement[config.restangularFields.route], true);\n      }\n\n      function restangularizeElem(parent, element, route, fromServer?, collection?, reqParams?) {\n        var elem = config.onBeforeElemRestangularized(element, false, route);\n\n        var localElem = restangularizeBase(parent, elem, route, reqParams, fromServer);\n\n        if (config.useCannonicalId) {\n          localElem[config.restangularFields.cannonicalId] = config.getIdFromElem(localElem);\n        }\n\n        if (collection) {\n          localElem[config.restangularFields.getParentList] = function () {\n            return collection;\n          };\n        }\n\n        localElem[config.restangularFields.restangularCollection] = false;\n        localElem[config.restangularFields.get] = bind(getFunction, localElem);\n        localElem[config.restangularFields.getList] = bind(fetchFunction, localElem);\n        localElem[config.restangularFields.put] = bind(putFunction, localElem);\n        localElem[config.restangularFields.post] = bind(postFunction, localElem);\n        localElem[config.restangularFields.remove] = bind(deleteFunction, localElem);\n        localElem[config.restangularFields.head] = bind(headFunction, localElem);\n        localElem[config.restangularFields.trace] = bind(traceFunction, localElem);\n        localElem[config.restangularFields.options] = bind(optionsFunction, localElem);\n        localElem[config.restangularFields.patch] = bind(patchFunction, localElem);\n        localElem[config.restangularFields.save] = bind(save, localElem);\n\n        addCustomOperation(localElem);\n        return config.transformElem(localElem, false, route, service, true);\n      }\n\n      function restangularizeCollection(parent, element, route, fromServer?, reqParams?) {\n        var elem = config.onBeforeElemRestangularized(element, true, route);\n\n        var localElem = restangularizeBase(parent, elem, route, reqParams, fromServer);\n        localElem[config.restangularFields.restangularCollection] = true;\n        localElem[config.restangularFields.post] = bind(postFunction, localElem, null);\n        localElem[config.restangularFields.remove] = bind(deleteFunction, localElem);\n        localElem[config.restangularFields.head] = bind(headFunction, localElem);\n        localElem[config.restangularFields.trace] = bind(traceFunction, localElem);\n        localElem[config.restangularFields.putElement] = bind(putElementFunction, localElem);\n        localElem[config.restangularFields.options] = bind(optionsFunction, localElem);\n        localElem[config.restangularFields.patch] = bind(patchFunction, localElem);\n        localElem[config.restangularFields.get] = bind(getById, localElem);\n        localElem[config.restangularFields.getList] = bind(fetchFunction, localElem, null);\n\n        addCustomOperation(localElem);\n        return config.transformElem(localElem, true, route, service, true);\n      }\n\n      function restangularizeCollectionAndElements(parent, element, route) {\n        var collection = restangularizeCollection(parent, element, route, false);\n        each(collection, function (elem) {\n          if (elem) {\n            restangularizeElem(parent, elem, route, false);\n          }\n        });\n        return collection;\n      }\n\n      function getById(id, reqParams, headers) {\n        return this.customGET(id.toString(), reqParams, headers);\n      }\n\n      function putElementFunction(idx, params, headers) {\n        var __this = this;\n        var elemToPut = this[idx];\n        var subject = new BehaviorSubject(null);\n        var filledArray = [];\n        filledArray = config.transformElem(filledArray, true, elemToPut[config.restangularFields.route], service);\n\n        elemToPut.put(params, headers)\n        .subscribe(function (serverElem) {\n          var newArray = copyRestangularizedElement(__this);\n          newArray[idx] = serverElem;\n          filledArray = newArray;\n          subject.next(newArray);\n        }, function (response) {\n          subject.error(response);\n        }, function () {\n          subject.complete();\n        });\n\n        return restangularizeResponse(subject, true, filledArray);\n      }\n\n      function parseResponse(resData, operation, route, fetchUrl, response, subject) {\n        var data = config.responseExtractor(resData, operation, route, fetchUrl, response, subject);\n        var etag = response.headers.get('ETag');\n        if (data && etag) {\n          data[config.restangularFields.etag] = etag;\n        }\n        return data;\n      }\n\n      function fetchFunction(what, reqParams, headers) {\n        var __this = this;\n        var subject = new BehaviorSubject(null);\n        var operation = 'getList';\n        var url = urlHandler.fetchUrl(this, what);\n        var whatFetched = what || __this[config.restangularFields.route];\n\n        var request = config.fullRequestInterceptor(null, operation,\n          whatFetched, url, headers || {}, reqParams || {}, this[config.restangularFields.httpConfig] || {});\n\n        var filledArray = [];\n        filledArray = config.transformElem(filledArray, true, whatFetched, service);\n\n        var method = 'getList';\n\n        if (config.jsonp) {\n          method = 'jsonp';\n        }\n\n        var okCallback = function (response) {\n          var resData = response.body;\n          var fullParams = response.config.params;\n          var data = parseResponse(resData, operation, whatFetched, url, response, subject);\n\n          // support empty response for getList() calls (some APIs respond with 204 and empty body)\n          if (isUndefined(data) || '' === data) {\n            data = [];\n          }\n          if (!isArray(data)) {\n            throw new Error('Response for getList SHOULD be an array and not an object or something else');\n          }\n\n          if (true === config.plainByDefault) {\n            return resolvePromise(subject, response, data, filledArray);\n          }\n\n          var processedData = map(data, function (elem) {\n            if (!__this[config.restangularFields.restangularCollection]) {\n              return restangularizeElem(__this, elem, what, true, data);\n            } else {\n              return restangularizeElem(__this[config.restangularFields.parentResource],\n                elem, __this[config.restangularFields.route], true, data);\n            }\n          });\n\n          processedData = extend(data, processedData);\n\n          if (!__this[config.restangularFields.restangularCollection]) {\n            resolvePromise(\n              subject,\n              response,\n              restangularizeCollection(\n                __this,\n                processedData,\n                what,\n                true,\n                fullParams\n              ),\n              filledArray\n            );\n          } else {\n            resolvePromise(\n              subject,\n              response,\n              restangularizeCollection(\n                __this[config.restangularFields.parentResource],\n                processedData,\n                __this[config.restangularFields.route],\n                true,\n                fullParams\n              ),\n              filledArray\n            );\n          }\n        };\n\n        urlHandler.resource(this, $http, request.httpConfig, request.headers, request.params, what,\n          this[config.restangularFields.etag], operation)[method]()\n        .subscribe(okCallback, function error(response) {\n          if (response.status === 304 && __this[config.restangularFields.restangularCollection]) {\n            resolvePromise(subject, response, __this, filledArray);\n          } else if (every(config.errorInterceptors, function (cb: any) {\n\n              return cb(response, subject, okCallback) !== false;\n            })) {\n            // triggered if no callback returns false\n            subject.error(response);\n          }\n        });\n\n        return restangularizeResponse(subject, true, filledArray);\n      }\n\n      function withHttpConfig(httpConfig) {\n        this[config.restangularFields.httpConfig] = httpConfig;\n        return this;\n      }\n\n      function save(params, headers) {\n        if (this[config.restangularFields.fromServer]) {\n          return this[config.restangularFields.put](params, headers);\n        } else {\n          return bind(elemFunction, this)('post', undefined, params, undefined, headers);\n        }\n      }\n\n      function elemFunction(operation, what, params, obj, headers) {\n        var __this = this;\n        var subject = new BehaviorSubject(null);\n        var resParams = params || {};\n        var route = what || this[config.restangularFields.route];\n        var fetchUrl = urlHandler.fetchUrl(this, what);\n\n        var callObj = obj || this;\n        // fallback to etag on restangular object (since for custom methods we probably don't explicitly specify the etag field)\n        var etag = callObj[config.restangularFields.etag] || (operation !== 'post' ? this[config.restangularFields.etag] : null);\n\n        if (isObject(callObj) && config.isRestangularized(callObj)) {\n          callObj = stripRestangular(callObj);\n        }\n        var request = config.fullRequestInterceptor(callObj, operation, route, fetchUrl,\n          headers || {}, resParams || {}, this[config.restangularFields.httpConfig] || {});\n\n        var filledObject = {};\n        filledObject = config.transformElem(filledObject, false, route, service);\n\n        var okCallback = function (response) {\n          var resData = get(response, 'body');\n          var fullParams = get(response, 'config.params');\n\n          var elem = parseResponse(resData, operation, route, fetchUrl, response, subject);\n\n          if (elem) {\n            var data;\n            if (true === config.plainByDefault) {\n              return resolvePromise(subject, response, elem, filledObject);\n            }\n\n            if (operation === 'post' && !__this[config.restangularFields.restangularCollection]) {\n              data = restangularizeElem(\n                __this[config.restangularFields.parentResource],\n                elem,\n                route,\n                true,\n                null,\n                fullParams\n              );\n              resolvePromise(subject, response, data, filledObject);\n            } else {\n              data = restangularizeElem(\n                __this[config.restangularFields.parentResource],\n                elem,\n                __this[config.restangularFields.route],\n                true,\n                null,\n                fullParams\n              );\n\n              data[config.restangularFields.singleOne] = __this[config.restangularFields.singleOne];\n              resolvePromise(subject, response, data, filledObject);\n            }\n\n          } else {\n            resolvePromise(subject, response, undefined, filledObject);\n          }\n        };\n\n        var errorCallback = function (response) {\n          if (response.status === 304 && config.isSafe(operation)) {\n            resolvePromise(subject, response, __this, filledObject);\n          } else if (every(config.errorInterceptors, function (cb: any) {\n              return cb(response, subject, okCallback) !== false;\n            })) {\n            // triggered if no callback returns false\n            subject.error(response);\n          }\n        };\n        // Overriding HTTP Method\n        var callOperation = operation;\n        var callHeaders = extend({}, request.headers);\n        var isOverrideOperation = config.isOverridenMethod(operation);\n        if (isOverrideOperation) {\n          callOperation = 'post';\n          callHeaders = extend(callHeaders, {'X-HTTP-Method-Override': operation === 'remove' ? 'DELETE' : operation.toUpperCase()});\n        } else if (config.jsonp && callOperation === 'get') {\n          callOperation = 'jsonp';\n        }\n\n        if (config.isSafe(operation)) {\n          if (isOverrideOperation) {\n            urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\n              what, etag, callOperation)[callOperation]({}).subscribe(okCallback, errorCallback);\n          } else {\n            urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\n              what, etag, callOperation)[callOperation]().subscribe(okCallback, errorCallback);\n          }\n        } else {\n          urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\n            what, etag, callOperation)[callOperation](request.element).subscribe(okCallback, errorCallback);\n        }\n\n        return restangularizeResponse(subject, false, filledObject);\n      }\n\n      function getFunction(params, headers) {\n        return bind(elemFunction, this)('get', undefined, params, undefined, headers);\n      }\n\n      function deleteFunction(params, headers) {\n        return bind(elemFunction, this)('remove', undefined, params, undefined, headers);\n      }\n\n      function putFunction(params, headers) {\n        return bind(elemFunction, this)('put', undefined, params, undefined, headers);\n      }\n\n      function postFunction(what, elem, params, headers) {\n        return bind(elemFunction, this)('post', what, params, elem, headers);\n      }\n\n      function headFunction(params, headers) {\n        return bind(elemFunction, this)('head', undefined, params, undefined, headers);\n      }\n\n      function traceFunction(params, headers) {\n        return bind(elemFunction, this)('trace', undefined, params, undefined, headers);\n      }\n\n      function optionsFunction(params, headers) {\n        return bind(elemFunction, this)('options', undefined, params, undefined, headers);\n      }\n\n      function patchFunction(elem, params, headers) {\n        return bind(elemFunction, this)('patch', undefined, params, elem, headers);\n      }\n\n      function customFunction(operation, path, params, headers, elem) {\n        return bind(elemFunction, this)(operation, path, params, elem, headers);\n      }\n\n      function addRestangularMethodFunction(name, operation, path, defaultParams, defaultHeaders, defaultElem) {\n        var bindedFunction;\n        if (operation === 'getList') {\n          bindedFunction = bind(fetchFunction, this, path);\n        } else {\n          bindedFunction = bind(customFunction, this, operation, path);\n        }\n\n        var createdFunction = function (params, headers, elem) {\n          var callParams = defaults({\n            params: params,\n            headers: headers,\n            elem: elem\n          }, {\n            params: defaultParams,\n            headers: defaultHeaders,\n            elem: defaultElem\n          });\n          return bindedFunction(callParams.params, callParams.headers, callParams.elem);\n        };\n\n        if (config.isSafe(operation)) {\n          this[name] = createdFunction;\n        } else {\n          this[name] = function (elem, params, headers) {\n            return createdFunction(params, headers, elem);\n          };\n        }\n      }\n\n      function withConfigurationFunction(configurer) {\n        var newConfig = clone(omit(config, 'configuration'));\n        RestangularConfigurer(newConfig, newConfig);\n        configurer(newConfig);\n        return createServiceForConfiguration(newConfig);\n      }\n\n      function toService(route, parent) {\n        var knownCollectionMethods = values(config.restangularFields);\n        var serv: any = {};\n        var collection = (parent || service).all(route);\n        serv.one = bind(one, (parent || service), parent, route);\n        serv.all = bind(collection.all, collection);\n        serv.post = bind(collection.post, collection);\n        serv.getList = bind(collection.getList, collection);\n        serv.withHttpConfig = bind(collection.withHttpConfig, collection);\n        serv.get = bind(collection.get, collection);\n\n        for (var prop in collection) {\n          if (collection.hasOwnProperty(prop) && isFunction(collection[prop]) && !includes(knownCollectionMethods, prop)) {\n            serv[prop] = bind(collection[prop], collection);\n          }\n        }\n\n        return serv;\n      }\n\n      RestangularConfigurer(service, config);\n\n      service.copy = bind(copyRestangularizedElement, service);\n\n      service.service = bind(toService, service);\n\n      service.withConfig = bind(withConfigurationFunction, service);\n\n      service.one = bind(one, service, null);\n\n      service.all = bind(all, service, null);\n\n      service.several = bind(several, service, null);\n\n      service.oneUrl = bind(oneUrl, service, null);\n\n      service.allUrl = bind(allUrl, service, null);\n\n      service.stripRestangular = bind(stripRestangular, service);\n\n      service.restangularizeElement = bind(restangularizeElem, service);\n\n      service.restangularizeCollection = bind(restangularizeCollectionAndElements, service);\n\n      return service;\n    }\n\n    return createServiceForConfiguration(globalConfiguration);\n  };\n\n}\n","/* tslint:disable:member-ordering no-unused-variable */\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf, InjectionToken} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RESTANGULAR, RestangularFactory} from './ngx-restangular.config';\nimport {Restangular} from './ngx-restangular';\nimport {RestangularHttp} from './ngx-restangular-http';\n\nexport const CONFIG_OBJ = new InjectionToken<string>('configObj');\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [RestangularHttp, Restangular]\n})\nexport class RestangularModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: RestangularModule) {\n    if (parentModule) {\n      throw new Error(\n        'RestangularModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config1?, config2?): ModuleWithProviders {\n    return {\n      ngModule: RestangularModule,\n      providers: [\n        {provide: CONFIG_OBJ, useValue: [config1,config2]},\n        {provide: RESTANGULAR, useFactory: RestangularFactory, deps: [CONFIG_OBJ]},\n      ]\n    }\n  }\n\n}\n"]}